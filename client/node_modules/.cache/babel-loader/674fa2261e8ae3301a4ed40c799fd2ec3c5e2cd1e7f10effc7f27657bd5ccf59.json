{"ast":null,"code":"var _jsxFileName = \"c:\\\\coding\\\\calcalc\\\\client\\\\src\\\\contexts\\\\CalendarContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/CalendarContext.js\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport moment from 'moment';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContext = /*#__PURE__*/createContext(null);\n\n// Provider component\nexport const CalendarProvider = ({\n  children\n}) => {\n  _s();\n  // Date range state from localStorage or defaults\n  const [dateRange, setDateRange] = useState(() => {\n    const savedRange = localStorage.getItem('calendarDateRange');\n    if (savedRange) {\n      try {\n        const parsed = JSON.parse(savedRange);\n        return {\n          start: new Date(parsed.start),\n          end: new Date(parsed.end),\n          view: parsed.view || 'month'\n        };\n      } catch (error) {\n        console.error('Error parsing saved date range:', error);\n      }\n    }\n    // Default range: current month\n    return {\n      start: moment().startOf('month').toDate(),\n      end: moment().endOf('month').toDate(),\n      view: 'month'\n    };\n  });\n\n  // Save date range to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('calendarDateRange', JSON.stringify({\n      start: dateRange.start.toISOString(),\n      end: dateRange.end.toISOString(),\n      view: dateRange.view\n    }));\n  }, [dateRange]);\n\n  // Update the date range\n  const updateDateRange = newRange => {\n    setDateRange(prev => ({\n      ...prev,\n      ...newRange\n    }));\n  };\n\n  // Change the view (month, week, day, agenda)\n  const changeView = view => {\n    setDateRange(prev => ({\n      ...prev,\n      view\n    }));\n  };\n\n  // Navigate to previous/next period\n  const navigate = direction => {\n    const {\n      start,\n      end,\n      view\n    } = dateRange;\n    let newStart, newEnd;\n    switch (view) {\n      case 'month':\n        newStart = moment(start)[direction === 'next' ? 'add' : 'subtract'](1, 'month').startOf('month').toDate();\n        newEnd = moment(newStart).endOf('month').toDate();\n        break;\n      case 'week':\n        newStart = moment(start)[direction === 'next' ? 'add' : 'subtract'](1, 'week').startOf('week').toDate();\n        newEnd = moment(newStart).endOf('week').toDate();\n        break;\n      case 'day':\n        newStart = moment(start)[direction === 'next' ? 'add' : 'subtract'](1, 'day').startOf('day').toDate();\n        newEnd = moment(newStart).endOf('day').toDate();\n        break;\n      default:\n        // For agenda view, move by month\n        newStart = moment(start)[direction === 'next' ? 'add' : 'subtract'](1, 'month').startOf('month').toDate();\n        newEnd = moment(newStart).add(3, 'months').endOf('month').toDate();\n    }\n    setDateRange({\n      start: newStart,\n      end: newEnd,\n      view\n    });\n  };\n\n  // Jump to today\n  const goToToday = () => {\n    const {\n      view\n    } = dateRange;\n    let newStart, newEnd;\n    switch (view) {\n      case 'month':\n        newStart = moment().startOf('month').toDate();\n        newEnd = moment().endOf('month').toDate();\n        break;\n      case 'week':\n        newStart = moment().startOf('week').toDate();\n        newEnd = moment().endOf('week').toDate();\n        break;\n      case 'day':\n        newStart = moment().startOf('day').toDate();\n        newEnd = moment().endOf('day').toDate();\n        break;\n      default:\n        // For agenda view\n        newStart = moment().startOf('month').toDate();\n        newEnd = moment().add(3, 'months').endOf('month').toDate();\n    }\n    setDateRange({\n      start: newStart,\n      end: newEnd,\n      view\n    });\n  };\n\n  // Value to be provided to consumers\n  const value = {\n    dateRange,\n    updateDateRange,\n    changeView,\n    navigate,\n    goToToday\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the calendar context\n_s(CalendarProvider, \"bNBKyO2O5astmGgkqNE6qH/5u38=\");\n_c = CalendarProvider;\nexport const useCalendar = () => {\n  _s2();\n  const context = useContext(CalendarContext);\n  if (!context) {\n    throw new Error('useCalendar must be used within a CalendarProvider');\n  }\n  return context;\n};\n_s2(useCalendar, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default CalendarContext;\nvar _c;\n$RefreshReg$(_c, \"CalendarProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","moment","jsxDEV","_jsxDEV","CalendarContext","CalendarProvider","children","_s","dateRange","setDateRange","savedRange","localStorage","getItem","parsed","JSON","parse","start","Date","end","view","error","console","startOf","toDate","endOf","setItem","stringify","toISOString","updateDateRange","newRange","prev","changeView","navigate","direction","newStart","newEnd","add","goToToday","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCalendar","_s2","context","Error","$RefreshReg$"],"sources":["c:/coding/calcalc/client/src/contexts/CalendarContext.js"],"sourcesContent":["// src/contexts/CalendarContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport moment from 'moment';\r\n\r\n// Create context\r\nconst CalendarContext = createContext(null);\r\n\r\n// Provider component\r\nexport const CalendarProvider = ({ children }) => {\r\n  // Date range state from localStorage or defaults\r\n  const [dateRange, setDateRange] = useState(() => {\r\n    const savedRange = localStorage.getItem('calendarDateRange');\r\n    if (savedRange) {\r\n      try {\r\n        const parsed = JSON.parse(savedRange);\r\n        return {\r\n          start: new Date(parsed.start),\r\n          end: new Date(parsed.end),\r\n          view: parsed.view || 'month'\r\n        };\r\n      } catch (error) {\r\n        console.error('Error parsing saved date range:', error);\r\n      }\r\n    }\r\n    // Default range: current month\r\n    return {\r\n      start: moment().startOf('month').toDate(),\r\n      end: moment().endOf('month').toDate(),\r\n      view: 'month'\r\n    };\r\n  });\r\n\r\n  // Save date range to localStorage when it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('calendarDateRange', JSON.stringify({\r\n      start: dateRange.start.toISOString(),\r\n      end: dateRange.end.toISOString(),\r\n      view: dateRange.view\r\n    }));\r\n  }, [dateRange]);\r\n\r\n  // Update the date range\r\n  const updateDateRange = (newRange) => {\r\n    setDateRange(prev => ({\r\n      ...prev,\r\n      ...newRange\r\n    }));\r\n  };\r\n\r\n  // Change the view (month, week, day, agenda)\r\n  const changeView = (view) => {\r\n    setDateRange(prev => ({\r\n      ...prev,\r\n      view\r\n    }));\r\n  };\r\n\r\n  // Navigate to previous/next period\r\n  const navigate = (direction) => {\r\n    const { start, end, view } = dateRange;\r\n    let newStart, newEnd;\r\n\r\n    switch (view) {\r\n      case 'month':\r\n        newStart = moment(start)[direction === 'next' ? 'add' : 'subtract'](1, 'month').startOf('month').toDate();\r\n        newEnd = moment(newStart).endOf('month').toDate();\r\n        break;\r\n      case 'week':\r\n        newStart = moment(start)[direction === 'next' ? 'add' : 'subtract'](1, 'week').startOf('week').toDate();\r\n        newEnd = moment(newStart).endOf('week').toDate();\r\n        break;\r\n      case 'day':\r\n        newStart = moment(start)[direction === 'next' ? 'add' : 'subtract'](1, 'day').startOf('day').toDate();\r\n        newEnd = moment(newStart).endOf('day').toDate();\r\n        break;\r\n      default:\r\n        // For agenda view, move by month\r\n        newStart = moment(start)[direction === 'next' ? 'add' : 'subtract'](1, 'month').startOf('month').toDate();\r\n        newEnd = moment(newStart).add(3, 'months').endOf('month').toDate();\r\n    }\r\n\r\n    setDateRange({\r\n      start: newStart,\r\n      end: newEnd,\r\n      view\r\n    });\r\n  };\r\n\r\n  // Jump to today\r\n  const goToToday = () => {\r\n    const { view } = dateRange;\r\n    let newStart, newEnd;\r\n\r\n    switch (view) {\r\n      case 'month':\r\n        newStart = moment().startOf('month').toDate();\r\n        newEnd = moment().endOf('month').toDate();\r\n        break;\r\n      case 'week':\r\n        newStart = moment().startOf('week').toDate();\r\n        newEnd = moment().endOf('week').toDate();\r\n        break;\r\n      case 'day':\r\n        newStart = moment().startOf('day').toDate();\r\n        newEnd = moment().endOf('day').toDate();\r\n        break;\r\n      default:\r\n        // For agenda view\r\n        newStart = moment().startOf('month').toDate();\r\n        newEnd = moment().add(3, 'months').endOf('month').toDate();\r\n    }\r\n\r\n    setDateRange({\r\n      start: newStart,\r\n      end: newEnd,\r\n      view\r\n    });\r\n  };\r\n\r\n  // Value to be provided to consumers\r\n  const value = {\r\n    dateRange,\r\n    updateDateRange,\r\n    changeView,\r\n    navigate,\r\n    goToToday\r\n  };\r\n\r\n  return (\r\n    <CalendarContext.Provider value={value}>\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the calendar context\r\nexport const useCalendar = () => {\r\n  const context = useContext(CalendarContext);\r\n  if (!context) {\r\n    throw new Error('useCalendar must be used within a CalendarProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default CalendarContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}