{"ast":null,"code":"var _jsxFileName = \"c:\\\\coding\\\\calcalc\\\\client\\\\src\\\\contexts\\\\CalendarContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/CalendarContext.js\nimport React, { createContext, useState, useEffect, useContext, useCallback, useMemo } from 'react';\nimport moment from 'moment';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContext = /*#__PURE__*/createContext(null);\n\n// Provider component\nexport const CalendarProvider = ({\n  children\n}) => {\n  _s();\n  // Date range state from localStorage or defaults\n  const [dateRange, setDateRange] = useState(() => {\n    const savedRange = localStorage.getItem('calendarDateRange');\n    if (savedRange) {\n      try {\n        const parsed = JSON.parse(savedRange);\n        return {\n          start: new Date(parsed.start),\n          end: new Date(parsed.end),\n          view: parsed.view || 'month'\n        };\n      } catch (error) {\n        console.error('Error parsing saved date range:', error);\n      }\n    }\n    // Default range: current month\n    return {\n      start: moment().startOf('month').toDate(),\n      end: moment().endOf('month').toDate(),\n      view: 'month'\n    };\n  });\n\n  // Save date range to localStorage when it changes, but not on every render\n  useEffect(() => {\n    const data = {\n      start: dateRange.start.toISOString(),\n      end: dateRange.end.toISOString(),\n      view: dateRange.view\n    };\n    localStorage.setItem('calendarDateRange', JSON.stringify(data));\n  }, [dateRange.start, dateRange.end, dateRange.view]);\n\n  // Update the date range - memoized to prevent recreation on each render\n  const updateDateRange = useCallback(newRange => {\n    setDateRange(prev => {\n      const updatedRange = {\n        ...prev,\n        ...newRange\n      };\n\n      // Ensure end date is updated if start date changed\n      if (newRange.start && !newRange.end) {\n        let endDate;\n        switch (prev.view) {\n          case 'month':\n            endDate = moment(newRange.start).endOf('month').toDate();\n            break;\n          case 'week':\n            endDate = moment(newRange.start).endOf('week').toDate();\n            break;\n          case 'day':\n            endDate = moment(newRange.start).endOf('day').toDate();\n            break;\n          default:\n            endDate = moment(newRange.start).add(1, 'month').endOf('month').toDate();\n        }\n        updatedRange.end = endDate;\n      }\n      return updatedRange;\n    });\n  }, []);\n\n  // Change the view (month, week, day, agenda) - memoized\n  const changeView = useCallback(view => {\n    setDateRange(prev => {\n      let start = prev.start;\n      let end;\n\n      // Update start/end based on new view\n      switch (view) {\n        case 'month':\n          start = moment(prev.start).startOf('month').toDate();\n          end = moment(start).endOf('month').toDate();\n          break;\n        case 'week':\n          start = moment(prev.start).startOf('week').toDate();\n          end = moment(start).endOf('week').toDate();\n          break;\n        case 'day':\n          start = moment(prev.start).startOf('day').toDate();\n          end = moment(start).endOf('day').toDate();\n          break;\n        default:\n          // For agenda view\n          start = moment(prev.start).startOf('month').toDate();\n          end = moment(start).add(3, 'months').endOf('month').toDate();\n      }\n      return {\n        start,\n        end,\n        view\n      };\n    });\n  }, []);\n\n  // Navigate to previous/next period - memoized\n  const navigate = useCallback(direction => {\n    setDateRange(prev => {\n      const {\n        view\n      } = prev;\n      let newStart, newEnd;\n      switch (view) {\n        case 'month':\n          newStart = moment(prev.start)[direction === 'next' ? 'add' : 'subtract'](1, 'month').startOf('month').toDate();\n          newEnd = moment(newStart).endOf('month').toDate();\n          break;\n        case 'week':\n          newStart = moment(prev.start)[direction === 'next' ? 'add' : 'subtract'](1, 'week').startOf('week').toDate();\n          newEnd = moment(newStart).endOf('week').toDate();\n          break;\n        case 'day':\n          newStart = moment(prev.start)[direction === 'next' ? 'add' : 'subtract'](1, 'day').startOf('day').toDate();\n          newEnd = moment(newStart).endOf('day').toDate();\n          break;\n        default:\n          // For agenda view, move by month\n          newStart = moment(prev.start)[direction === 'next' ? 'add' : 'subtract'](1, 'month').startOf('month').toDate();\n          newEnd = moment(newStart).add(3, 'months').endOf('month').toDate();\n      }\n      return {\n        start: newStart,\n        end: newEnd,\n        view\n      };\n    });\n  }, []);\n\n  // Jump to today - memoized\n  const goToToday = useCallback(() => {\n    setDateRange(prev => {\n      const {\n        view\n      } = prev;\n      let newStart, newEnd;\n      switch (view) {\n        case 'month':\n          newStart = moment().startOf('month').toDate();\n          newEnd = moment().endOf('month').toDate();\n          break;\n        case 'week':\n          newStart = moment().startOf('week').toDate();\n          newEnd = moment().endOf('week').toDate();\n          break;\n        case 'day':\n          newStart = moment().startOf('day').toDate();\n          newEnd = moment().endOf('day').toDate();\n          break;\n        default:\n          // For agenda view\n          newStart = moment().startOf('month').toDate();\n          newEnd = moment().add(3, 'months').endOf('month').toDate();\n      }\n      return {\n        start: newStart,\n        end: newEnd,\n        view\n      };\n    });\n  }, []);\n\n  // Value to be provided to consumers - memoized to prevent unnecessary context updates\n  const value = useMemo(() => ({\n    dateRange,\n    updateDateRange,\n    changeView,\n    navigate,\n    goToToday\n  }), [dateRange, updateDateRange, changeView, navigate, goToToday]);\n  return /*#__PURE__*/_jsxDEV(CalendarContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the calendar context\n_s(CalendarProvider, \"oXkHotyNcKKmAlRieKLFCOAPwHE=\");\n_c = CalendarProvider;\nexport const useCalendar = () => {\n  _s2();\n  const context = useContext(CalendarContext);\n  if (!context) {\n    throw new Error('useCalendar must be used within a CalendarProvider');\n  }\n  return context;\n};\n_s2(useCalendar, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default CalendarContext;\nvar _c;\n$RefreshReg$(_c, \"CalendarProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","useMemo","moment","jsxDEV","_jsxDEV","CalendarContext","CalendarProvider","children","_s","dateRange","setDateRange","savedRange","localStorage","getItem","parsed","JSON","parse","start","Date","end","view","error","console","startOf","toDate","endOf","data","toISOString","setItem","stringify","updateDateRange","newRange","prev","updatedRange","endDate","add","changeView","navigate","direction","newStart","newEnd","goToToday","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCalendar","_s2","context","Error","$RefreshReg$"],"sources":["c:/coding/calcalc/client/src/contexts/CalendarContext.js"],"sourcesContent":["// src/contexts/CalendarContext.js\r\nimport React, { createContext, useState, useEffect, useContext, useCallback, useMemo } from 'react';\r\nimport moment from 'moment';\r\n\r\n// Create context\r\nconst CalendarContext = createContext(null);\r\n\r\n// Provider component\r\nexport const CalendarProvider = ({ children }) => {\r\n  // Date range state from localStorage or defaults\r\n  const [dateRange, setDateRange] = useState(() => {\r\n    const savedRange = localStorage.getItem('calendarDateRange');\r\n    if (savedRange) {\r\n      try {\r\n        const parsed = JSON.parse(savedRange);\r\n        return {\r\n          start: new Date(parsed.start),\r\n          end: new Date(parsed.end),\r\n          view: parsed.view || 'month'\r\n        };\r\n      } catch (error) {\r\n        console.error('Error parsing saved date range:', error);\r\n      }\r\n    }\r\n    // Default range: current month\r\n    return {\r\n      start: moment().startOf('month').toDate(),\r\n      end: moment().endOf('month').toDate(),\r\n      view: 'month'\r\n    };\r\n  });\r\n\r\n  // Save date range to localStorage when it changes, but not on every render\r\n  useEffect(() => {\r\n    const data = {\r\n      start: dateRange.start.toISOString(),\r\n      end: dateRange.end.toISOString(),\r\n      view: dateRange.view\r\n    };\r\n    \r\n    localStorage.setItem('calendarDateRange', JSON.stringify(data));\r\n  }, [dateRange.start, dateRange.end, dateRange.view]);\r\n\r\n  // Update the date range - memoized to prevent recreation on each render\r\n  const updateDateRange = useCallback((newRange) => {\r\n    setDateRange(prev => {\r\n      const updatedRange = { ...prev, ...newRange };\r\n      \r\n      // Ensure end date is updated if start date changed\r\n      if (newRange.start && !newRange.end) {\r\n        let endDate;\r\n        \r\n        switch (prev.view) {\r\n          case 'month':\r\n            endDate = moment(newRange.start).endOf('month').toDate();\r\n            break;\r\n          case 'week':\r\n            endDate = moment(newRange.start).endOf('week').toDate();\r\n            break;\r\n          case 'day':\r\n            endDate = moment(newRange.start).endOf('day').toDate();\r\n            break;\r\n          default:\r\n            endDate = moment(newRange.start).add(1, 'month').endOf('month').toDate();\r\n        }\r\n        \r\n        updatedRange.end = endDate;\r\n      }\r\n      \r\n      return updatedRange;\r\n    });\r\n  }, []);\r\n\r\n  // Change the view (month, week, day, agenda) - memoized\r\n  const changeView = useCallback((view) => {\r\n    setDateRange(prev => {\r\n      let start = prev.start;\r\n      let end;\r\n      \r\n      // Update start/end based on new view\r\n      switch (view) {\r\n        case 'month':\r\n          start = moment(prev.start).startOf('month').toDate();\r\n          end = moment(start).endOf('month').toDate();\r\n          break;\r\n        case 'week':\r\n          start = moment(prev.start).startOf('week').toDate();\r\n          end = moment(start).endOf('week').toDate();\r\n          break;\r\n        case 'day':\r\n          start = moment(prev.start).startOf('day').toDate();\r\n          end = moment(start).endOf('day').toDate();\r\n          break;\r\n        default:\r\n          // For agenda view\r\n          start = moment(prev.start).startOf('month').toDate();\r\n          end = moment(start).add(3, 'months').endOf('month').toDate();\r\n      }\r\n      \r\n      return { start, end, view };\r\n    });\r\n  }, []);\r\n\r\n  // Navigate to previous/next period - memoized\r\n  const navigate = useCallback((direction) => {\r\n    setDateRange(prev => {\r\n      const { view } = prev;\r\n      let newStart, newEnd;\r\n\r\n      switch (view) {\r\n        case 'month':\r\n          newStart = moment(prev.start)[direction === 'next' ? 'add' : 'subtract'](1, 'month').startOf('month').toDate();\r\n          newEnd = moment(newStart).endOf('month').toDate();\r\n          break;\r\n        case 'week':\r\n          newStart = moment(prev.start)[direction === 'next' ? 'add' : 'subtract'](1, 'week').startOf('week').toDate();\r\n          newEnd = moment(newStart).endOf('week').toDate();\r\n          break;\r\n        case 'day':\r\n          newStart = moment(prev.start)[direction === 'next' ? 'add' : 'subtract'](1, 'day').startOf('day').toDate();\r\n          newEnd = moment(newStart).endOf('day').toDate();\r\n          break;\r\n        default:\r\n          // For agenda view, move by month\r\n          newStart = moment(prev.start)[direction === 'next' ? 'add' : 'subtract'](1, 'month').startOf('month').toDate();\r\n          newEnd = moment(newStart).add(3, 'months').endOf('month').toDate();\r\n      }\r\n\r\n      return {\r\n        start: newStart,\r\n        end: newEnd,\r\n        view\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  // Jump to today - memoized\r\n  const goToToday = useCallback(() => {\r\n    setDateRange(prev => {\r\n      const { view } = prev;\r\n      let newStart, newEnd;\r\n\r\n      switch (view) {\r\n        case 'month':\r\n          newStart = moment().startOf('month').toDate();\r\n          newEnd = moment().endOf('month').toDate();\r\n          break;\r\n        case 'week':\r\n          newStart = moment().startOf('week').toDate();\r\n          newEnd = moment().endOf('week').toDate();\r\n          break;\r\n        case 'day':\r\n          newStart = moment().startOf('day').toDate();\r\n          newEnd = moment().endOf('day').toDate();\r\n          break;\r\n        default:\r\n          // For agenda view\r\n          newStart = moment().startOf('month').toDate();\r\n          newEnd = moment().add(3, 'months').endOf('month').toDate();\r\n      }\r\n\r\n      return {\r\n        start: newStart,\r\n        end: newEnd,\r\n        view\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  // Value to be provided to consumers - memoized to prevent unnecessary context updates\r\n  const value = useMemo(() => ({\r\n    dateRange,\r\n    updateDateRange,\r\n    changeView,\r\n    navigate,\r\n    goToToday\r\n  }), [dateRange, updateDateRange, changeView, navigate, goToToday]);\r\n\r\n  return (\r\n    <CalendarContext.Provider value={value}>\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the calendar context\r\nexport const useCalendar = () => {\r\n  const context = useContext(CalendarContext);\r\n  if (!context) {\r\n    throw new Error('useCalendar must be used within a CalendarProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default CalendarContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}