{"ast":null,"code":"var _jsxFileName = \"c:\\\\coding\\\\calcalc\\\\client\\\\src\\\\components\\\\calendar\\\\GoogleCalendarSync.js\",\n  _s = $RefreshSig$();\n// src/components/calendar/GoogleCalendarSync.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoogleCalendarSync = ({\n  onSyncComplete\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [connected, setConnected] = useState(false);\n  const [calendars, setCalendars] = useState([]);\n  const [selectedCalendar, setSelectedCalendar] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [syncDirection, setSyncDirection] = useState('both'); // 'import', 'export', or 'both'\n  const [syncFrequency, setSyncFrequency] = useState('daily'); // 'manual', 'daily', 'hourly'\n  const [syncStatus, setSyncStatus] = useState({\n    lastSync: null,\n    nextSync: null\n  });\n\n  // Check if connected on component mount\n  useEffect(() => {\n    checkConnection();\n\n    // Check for sync success from redirect\n    const urlParams = new URLSearchParams(window.location.search);\n    const syncSuccess = urlParams.get('syncSuccess');\n    if (syncSuccess === 'true') {\n      setMessage('Successfully connected to Google Calendar and synced events!');\n      // Remove the query param from URL\n      window.history.replaceState({}, document.title, window.location.pathname);\n      if (onSyncComplete) {\n        onSyncComplete();\n      }\n    }\n  }, [onSyncComplete]);\n\n  // Check if connected to Google Calendar\n  const checkConnection = async () => {\n    try {\n      setLoading(true);\n      // Try to fetch calendars, if it succeeds, we're connected\n      const response = await axios.get('/api/google/calendars');\n      setCalendars(response.data);\n      setConnected(true);\n\n      // Find the default calendar (primary)\n      const primaryCalendar = response.data.find(cal => cal.primary);\n      if (primaryCalendar) {\n        setSelectedCalendar(primaryCalendar.id);\n      } else if (response.data.length > 0) {\n        setSelectedCalendar(response.data[0].id);\n      }\n\n      // Get sync settings\n      try {\n        const settingsResponse = await axios.get('/api/settings/sync');\n        if (settingsResponse.data) {\n          setSyncDirection(settingsResponse.data.syncDirection || 'both');\n          setSyncFrequency(settingsResponse.data.syncFrequency || 'daily');\n          if (settingsResponse.data.lastSync) {\n            setSyncStatus({\n              lastSync: new Date(settingsResponse.data.lastSync),\n              nextSync: settingsResponse.data.nextSync ? new Date(settingsResponse.data.nextSync) : null\n            });\n          }\n        }\n      } catch (err) {\n        console.log('Could not fetch sync settings, using defaults');\n      }\n    } catch (err) {\n      setConnected(false);\n      console.log('Not connected to Google Calendar');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Connect to Google Calendar\n  const handleConnect = async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // Get auth URL from backend\n      const response = await axios.get('/api/google/auth-url');\n\n      // Redirect to Google OAuth\n      window.location.href = response.data.url;\n    } catch (err) {\n      setError('Failed to connect to Google Calendar. Please try again.');\n      console.error('Connection error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Sync calendar manually\n  const handleSync = async () => {\n    try {\n      setLoading(true);\n      setMessage('');\n      setError('');\n\n      // Call appropriate sync endpoint based on direction\n      let endpoint = '/api/google/sync';\n      if (syncDirection === 'import') {\n        endpoint = '/api/google/import';\n      } else if (syncDirection === 'export') {\n        endpoint = '/api/google/export';\n      }\n      const response = await axios.post(endpoint, {\n        calendarId: selectedCalendar\n      });\n      setMessage(response.data.message || 'Sync successful!');\n\n      // Update sync status\n      setSyncStatus({\n        lastSync: new Date(),\n        nextSync: calculateNextSync(syncFrequency)\n      });\n\n      // Call the onSyncComplete callback if provided\n      if (onSyncComplete) {\n        onSyncComplete();\n      }\n    } catch (err) {\n      setError('Failed to sync calendar. Please try again.');\n      console.error('Sync error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update default calendar\n  const handleCalendarChange = async e => {\n    const calendarId = e.target.value;\n    setSelectedCalendar(calendarId);\n    try {\n      setLoading(true);\n      setMessage('');\n      setError('');\n      await axios.put('/api/google/default-calendar', {\n        calendarId\n      });\n      setMessage('Default calendar updated successfully!');\n    } catch (err) {\n      setError('Failed to update default calendar.');\n      console.error('Calendar update error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update sync settings\n  const handleSyncSettingChange = async (setting, value) => {\n    try {\n      if (setting === 'direction') {\n        setSyncDirection(value);\n      } else if (setting === 'frequency') {\n        setSyncFrequency(value);\n      }\n\n      // Save settings to backend\n      await axios.post('/api/settings/sync', {\n        syncDirection: setting === 'direction' ? value : syncDirection,\n        syncFrequency: setting === 'frequency' ? value : syncFrequency\n      });\n      setMessage('Sync settings updated successfully!');\n\n      // Calculate next sync time based on frequency\n      if (setting === 'frequency') {\n        setSyncStatus(prev => ({\n          ...prev,\n          nextSync: calculateNextSync(value)\n        }));\n      }\n    } catch (err) {\n      setError('Failed to update sync settings.');\n      console.error('Settings update error:', err);\n    }\n  };\n\n  // Helper function to calculate next sync time\n  const calculateNextSync = frequency => {\n    const now = new Date();\n    switch (frequency) {\n      case 'hourly':\n        return new Date(now.setHours(now.getHours() + 1));\n      case 'daily':\n        return new Date(now.setDate(now.getDate() + 1));\n      case 'weekly':\n        return new Date(now.setDate(now.getDate() + 7));\n      default:\n        return null;\n      // Manual sync has no next time\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 rounded-lg p-6\",\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-600 text-white p-3 rounded mb-4\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-600 text-white p-3 rounded mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), !connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mb-4\",\n        children: \"Connect your Google Calendar to sync events automatically.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnect,\n        disabled: loading,\n        className: \"bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded flex items-center\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Connecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5 mr-2\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), \"Connect Google Calendar\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-400 mb-4\",\n        children: \"\\u2713 Connected to Google Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white mb-2\",\n          children: \"Default Calendar:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCalendar,\n          onChange: handleCalendarChange,\n          className: \"w-full p-2 rounded bg-gray-700 text-white border border-gray-600\",\n          disabled: loading,\n          children: calendars.map(calendar => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: calendar.id,\n            children: [calendar.summary, \" \", calendar.primary ? '(Primary)' : '']\n          }, calendar.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white mb-2\",\n          children: \"Sync Direction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"syncDirection\",\n              value: \"import\",\n              checked: syncDirection === 'import',\n              onChange: () => handleSyncSettingChange('direction', 'import'),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white\",\n              children: \"Import Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"syncDirection\",\n              value: \"export\",\n              checked: syncDirection === 'export',\n              onChange: () => handleSyncSettingChange('direction', 'export'),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white\",\n              children: \"Export Only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"syncDirection\",\n              value: \"both\",\n              checked: syncDirection === 'both',\n              onChange: () => handleSyncSettingChange('direction', 'both'),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white\",\n              children: \"Bidirectional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white mb-2\",\n          children: \"Sync Frequency:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: syncFrequency,\n          onChange: e => handleSyncSettingChange('frequency', e.target.value),\n          className: \"w-full p-2 rounded bg-gray-700 text-white border border-gray-600\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"manual\",\n            children: \"Manual Only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hourly\",\n            children: \"Every Hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"daily\",\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"weekly\",\n            children: \"Weekly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), syncStatus.lastSync && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last sync: \", new Date(syncStatus.lastSync).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), syncStatus.nextSync && syncFrequency !== 'manual' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Next scheduled sync: \", new Date(syncStatus.nextSync).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSync,\n        disabled: loading,\n        className: \"bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded flex items-center\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Syncing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5 mr-2\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this), \"Sync Now\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleCalendarSync, \"lpS65jEoCX4CiM6TATXiObjCG9k=\");\n_c = GoogleCalendarSync;\nexport default GoogleCalendarSync;\nvar _c;\n$RefreshReg$(_c, \"GoogleCalendarSync\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleCalendarSync","onSyncComplete","_s","loading","setLoading","connected","setConnected","calendars","setCalendars","selectedCalendar","setSelectedCalendar","message","setMessage","error","setError","syncDirection","setSyncDirection","syncFrequency","setSyncFrequency","syncStatus","setSyncStatus","lastSync","nextSync","checkConnection","urlParams","URLSearchParams","window","location","search","syncSuccess","get","history","replaceState","document","title","pathname","response","data","primaryCalendar","find","cal","primary","id","length","settingsResponse","Date","err","console","log","handleConnect","href","url","handleSync","endpoint","post","calendarId","calculateNextSync","handleCalendarChange","e","target","value","put","handleSyncSettingChange","setting","prev","frequency","now","setHours","getHours","setDate","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","xmlns","viewBox","fill","d","onChange","map","calendar","summary","type","name","checked","toLocaleString","fillRule","clipRule","_c","$RefreshReg$"],"sources":["c:/coding/calcalc/client/src/components/calendar/GoogleCalendarSync.js"],"sourcesContent":["// src/components/calendar/GoogleCalendarSync.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GoogleCalendarSync = ({ onSyncComplete }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const [calendars, setCalendars] = useState([]);\r\n  const [selectedCalendar, setSelectedCalendar] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [syncDirection, setSyncDirection] = useState('both'); // 'import', 'export', or 'both'\r\n  const [syncFrequency, setSyncFrequency] = useState('daily'); // 'manual', 'daily', 'hourly'\r\n  const [syncStatus, setSyncStatus] = useState({\r\n    lastSync: null,\r\n    nextSync: null\r\n  });\r\n\r\n  // Check if connected on component mount\r\n  useEffect(() => {\r\n    checkConnection();\r\n    \r\n    // Check for sync success from redirect\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const syncSuccess = urlParams.get('syncSuccess');\r\n    \r\n    if (syncSuccess === 'true') {\r\n      setMessage('Successfully connected to Google Calendar and synced events!');\r\n      // Remove the query param from URL\r\n      window.history.replaceState({}, document.title, window.location.pathname);\r\n      \r\n      if (onSyncComplete) {\r\n        onSyncComplete();\r\n      }\r\n    }\r\n  }, [onSyncComplete]);\r\n\r\n  // Check if connected to Google Calendar\r\n  const checkConnection = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Try to fetch calendars, if it succeeds, we're connected\r\n      const response = await axios.get('/api/google/calendars');\r\n      setCalendars(response.data);\r\n      setConnected(true);\r\n      \r\n      // Find the default calendar (primary)\r\n      const primaryCalendar = response.data.find(cal => cal.primary);\r\n      if (primaryCalendar) {\r\n        setSelectedCalendar(primaryCalendar.id);\r\n      } else if (response.data.length > 0) {\r\n        setSelectedCalendar(response.data[0].id);\r\n      }\r\n      \r\n      // Get sync settings\r\n      try {\r\n        const settingsResponse = await axios.get('/api/settings/sync');\r\n        if (settingsResponse.data) {\r\n          setSyncDirection(settingsResponse.data.syncDirection || 'both');\r\n          setSyncFrequency(settingsResponse.data.syncFrequency || 'daily');\r\n          \r\n          if (settingsResponse.data.lastSync) {\r\n            setSyncStatus({\r\n              lastSync: new Date(settingsResponse.data.lastSync),\r\n              nextSync: settingsResponse.data.nextSync ? new Date(settingsResponse.data.nextSync) : null\r\n            });\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log('Could not fetch sync settings, using defaults');\r\n      }\r\n    } catch (err) {\r\n      setConnected(false);\r\n      console.log('Not connected to Google Calendar');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Connect to Google Calendar\r\n  const handleConnect = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      // Get auth URL from backend\r\n      const response = await axios.get('/api/google/auth-url');\r\n      \r\n      // Redirect to Google OAuth\r\n      window.location.href = response.data.url;\r\n    } catch (err) {\r\n      setError('Failed to connect to Google Calendar. Please try again.');\r\n      console.error('Connection error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Sync calendar manually\r\n  const handleSync = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setMessage('');\r\n      setError('');\r\n      \r\n      // Call appropriate sync endpoint based on direction\r\n      let endpoint = '/api/google/sync';\r\n      if (syncDirection === 'import') {\r\n        endpoint = '/api/google/import';\r\n      } else if (syncDirection === 'export') {\r\n        endpoint = '/api/google/export';\r\n      }\r\n      \r\n      const response = await axios.post(endpoint, { calendarId: selectedCalendar });\r\n      setMessage(response.data.message || 'Sync successful!');\r\n      \r\n      // Update sync status\r\n      setSyncStatus({\r\n        lastSync: new Date(),\r\n        nextSync: calculateNextSync(syncFrequency)\r\n      });\r\n      \r\n      // Call the onSyncComplete callback if provided\r\n      if (onSyncComplete) {\r\n        onSyncComplete();\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to sync calendar. Please try again.');\r\n      console.error('Sync error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update default calendar\r\n  const handleCalendarChange = async (e) => {\r\n    const calendarId = e.target.value;\r\n    setSelectedCalendar(calendarId);\r\n    \r\n    try {\r\n      setLoading(true);\r\n      setMessage('');\r\n      setError('');\r\n      \r\n      await axios.put('/api/google/default-calendar', { calendarId });\r\n      setMessage('Default calendar updated successfully!');\r\n    } catch (err) {\r\n      setError('Failed to update default calendar.');\r\n      console.error('Calendar update error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update sync settings\r\n  const handleSyncSettingChange = async (setting, value) => {\r\n    try {\r\n      if (setting === 'direction') {\r\n        setSyncDirection(value);\r\n      } else if (setting === 'frequency') {\r\n        setSyncFrequency(value);\r\n      }\r\n      \r\n      // Save settings to backend\r\n      await axios.post('/api/settings/sync', {\r\n        syncDirection: setting === 'direction' ? value : syncDirection,\r\n        syncFrequency: setting === 'frequency' ? value : syncFrequency\r\n      });\r\n      \r\n      setMessage('Sync settings updated successfully!');\r\n      \r\n      // Calculate next sync time based on frequency\r\n      if (setting === 'frequency') {\r\n        setSyncStatus(prev => ({\r\n          ...prev,\r\n          nextSync: calculateNextSync(value)\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to update sync settings.');\r\n      console.error('Settings update error:', err);\r\n    }\r\n  };\r\n  \r\n  // Helper function to calculate next sync time\r\n  const calculateNextSync = (frequency) => {\r\n    const now = new Date();\r\n    \r\n    switch (frequency) {\r\n      case 'hourly':\r\n        return new Date(now.setHours(now.getHours() + 1));\r\n      case 'daily':\r\n        return new Date(now.setDate(now.getDate() + 1));\r\n      case 'weekly':\r\n        return new Date(now.setDate(now.getDate() + 7));\r\n      default:\r\n        return null; // Manual sync has no next time\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-800 rounded-lg p-6\">\r\n      {message && (\r\n        <div className=\"bg-green-600 text-white p-3 rounded mb-4\">\r\n          {message}\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"bg-red-600 text-white p-3 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {!connected ? (\r\n        <div>\r\n          <p className=\"text-gray-300 mb-4\">\r\n            Connect your Google Calendar to sync events automatically.\r\n          </p>\r\n          <button\r\n            onClick={handleConnect}\r\n            disabled={loading}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded flex items-center\"\r\n          >\r\n            {loading ? (\r\n              <span>Connecting...</span>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z\" />\r\n                </svg>\r\n                Connect Google Calendar\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p className=\"text-green-400 mb-4\">\r\n            ✓ Connected to Google Calendar\r\n          </p>\r\n          \r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-white mb-2\">Default Calendar:</label>\r\n            <select\r\n              value={selectedCalendar}\r\n              onChange={handleCalendarChange}\r\n              className=\"w-full p-2 rounded bg-gray-700 text-white border border-gray-600\"\r\n              disabled={loading}\r\n            >\r\n              {calendars.map(calendar => (\r\n                <option key={calendar.id} value={calendar.id}>\r\n                  {calendar.summary} {calendar.primary ? '(Primary)' : ''}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-white mb-2\">Sync Direction:</label>\r\n            <div className=\"flex space-x-4\">\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"syncDirection\"\r\n                  value=\"import\"\r\n                  checked={syncDirection === 'import'}\r\n                  onChange={() => handleSyncSettingChange('direction', 'import')}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-white\">Import Only</span>\r\n              </label>\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"syncDirection\"\r\n                  value=\"export\"\r\n                  checked={syncDirection === 'export'}\r\n                  onChange={() => handleSyncSettingChange('direction', 'export')}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-white\">Export Only</span>\r\n              </label>\r\n              <label className=\"flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"syncDirection\"\r\n                  value=\"both\"\r\n                  checked={syncDirection === 'both'}\r\n                  onChange={() => handleSyncSettingChange('direction', 'both')}\r\n                  className=\"mr-2\"\r\n                />\r\n                <span className=\"text-white\">Bidirectional</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-white mb-2\">Sync Frequency:</label>\r\n            <select\r\n              value={syncFrequency}\r\n              onChange={(e) => handleSyncSettingChange('frequency', e.target.value)}\r\n              className=\"w-full p-2 rounded bg-gray-700 text-white border border-gray-600\"\r\n              disabled={loading}\r\n            >\r\n              <option value=\"manual\">Manual Only</option>\r\n              <option value=\"hourly\">Every Hour</option>\r\n              <option value=\"daily\">Daily</option>\r\n              <option value=\"weekly\">Weekly</option>\r\n            </select>\r\n          </div>\r\n          \r\n          {syncStatus.lastSync && (\r\n            <div className=\"mb-4 text-gray-300\">\r\n              <p>Last sync: {new Date(syncStatus.lastSync).toLocaleString()}</p>\r\n              {syncStatus.nextSync && syncFrequency !== 'manual' && (\r\n                <p>Next scheduled sync: {new Date(syncStatus.nextSync).toLocaleString()}</p>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <button\r\n            onClick={handleSync}\r\n            disabled={loading}\r\n            className=\"bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded flex items-center\"\r\n          >\r\n            {loading ? (\r\n              <span>Syncing...</span>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Sync Now\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleCalendarSync;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}