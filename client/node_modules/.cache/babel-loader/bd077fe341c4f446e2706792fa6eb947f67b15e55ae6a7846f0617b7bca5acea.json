{"ast":null,"code":"var _jsxFileName = \"c:\\\\coding\\\\calcalc\\\\client\\\\src\\\\components\\\\calendar\\\\CalendarContainer.jsx\",\n  _s = $RefreshSig$();\n// src/components/calendar/CalendarContainer.jsx\nimport React, { useEffect, useState, useCallback, memo } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport axios from 'axios';\nimport { CalendarProvider, useCalendar } from '../../contexts/CalendarContext';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport ErrorAlert from '../UI/ErrorAlert';\n\n// Setup the localizer for react-big-calendar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\n\n// The actual Calendar view component - memoize to prevent unnecessary re-renders\nconst CalendarView = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  onSelectSlot,\n  onAddEvent\n}) => {\n  _s();\n  // Single source of truth for events\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [syncStatus, setSyncStatus] = useState({\n    lastSync: null,\n    isConnected: false,\n    inProgress: false\n  });\n\n  // Get calendar context\n  const {\n    dateRange,\n    updateDateRange,\n    changeView\n  } = useCalendar();\n\n  // Fetch events from API - wrapped in useCallback to maintain reference\n  const fetchEvents = useCallback(async () => {\n    if (isLoading) return; // Prevent multiple simultaneous fetches\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Use the date range in the API call if available\n      let response;\n      try {\n        response = await axios.get('/api/events');\n        console.log('Fetched events:', response.data);\n\n        // Transform the events for the calendar\n        const formattedEvents = response.data.map(event => ({\n          id: event.event_id || event.id,\n          title: event.summary || event.title || 'Untitled Event',\n          start: new Date(event.start_time || event.start),\n          end: new Date(event.end_time || event.end),\n          allDay: event.all_day || event.allDay || false,\n          income: event.income || 0,\n          expenses: event.expenses || 0,\n          venue: event.location || event.venue || '',\n          description: event.description || ''\n        }));\n        setEvents(formattedEvents);\n\n        // If onAddEvent callback is provided, update parent component\n        if (onAddEvent) {\n          onAddEvent(formattedEvents);\n        }\n      } catch (err) {\n        console.error('Error fetching events from API:', err);\n        setError('Failed to load events from server. Using local data instead.');\n\n        // Don't use mock data unless absolutely necessary\n        if (events.length === 0) {\n          // Only use mock data if we have no events\n          const mockEvents = [{\n            id: 1,\n            title: 'Wedding at Grand Ballroom',\n            start: new Date(2025, 2, 15),\n            end: new Date(2025, 2, 16),\n            income: 3000,\n            expenses: 800,\n            venue: 'Grand Ballroom'\n          }, {\n            id: 2,\n            title: 'Corporate Event',\n            start: new Date(2025, 2, 20),\n            end: new Date(2025, 2, 20),\n            income: 2500,\n            expenses: 600,\n            venue: 'City Conference Center'\n          }];\n          setEvents(mockEvents);\n\n          // If onAddEvent callback is provided, update parent component\n          if (onAddEvent) {\n            onAddEvent(mockEvents);\n          }\n        }\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [events.length, isLoading, onAddEvent]);\n\n  // Initial fetch of events\n  useEffect(() => {\n    fetchEvents();\n    // Check connection status\n    checkConnection();\n  }, [fetchEvents]);\n\n  // Add an event through the API\n  const addEvent = useCallback(async eventData => {\n    try {\n      const response = await axios.post('/api/events', eventData);\n      console.log('Event created:', response.data);\n\n      // Add the new event to the calendar\n      const newEvent = {\n        id: response.data.event_id || response.data.id || Date.now(),\n        title: response.data.summary || response.data.title || eventData.summary || eventData.title,\n        start: new Date(response.data.start_time || response.data.start || eventData.start_time || eventData.start),\n        end: new Date(response.data.end_time || response.data.end || eventData.end_time || eventData.end),\n        allDay: response.data.all_day || response.data.allDay || eventData.all_day || eventData.allDay || false,\n        income: response.data.income || eventData.income || 0,\n        expenses: response.data.expenses || eventData.expenses || 0,\n        venue: response.data.location || response.data.venue || eventData.location || eventData.venue || '',\n        description: response.data.description || eventData.description || ''\n      };\n      setEvents(prevEvents => [...prevEvents, newEvent]);\n\n      // If onAddEvent callback is provided, update parent component\n      if (onAddEvent) {\n        onAddEvent([...events, newEvent]);\n      }\n      return {\n        success: true,\n        event: newEvent\n      };\n    } catch (error) {\n      console.error('Error creating event:', error);\n      // Add event locally even if API fails\n      const newEvent = {\n        id: Date.now(),\n        title: eventData.summary || eventData.title,\n        start: new Date(eventData.start_time || eventData.start),\n        end: new Date(eventData.end_time || eventData.end),\n        allDay: eventData.all_day || eventData.allDay || false,\n        income: eventData.income || 0,\n        expenses: eventData.expenses || 0,\n        venue: eventData.location || eventData.venue || '',\n        description: eventData.description || ''\n      };\n      setEvents(prevEvents => [...prevEvents, newEvent]);\n\n      // If onAddEvent callback is provided, update parent component\n      if (onAddEvent) {\n        onAddEvent([...events, newEvent]);\n      }\n      return {\n        success: false,\n        event: newEvent,\n        error: error.message\n      };\n    }\n  }, [events, onAddEvent]);\n\n  // Check Google Calendar connection\n  const checkConnection = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/google/calendars');\n      console.log('Google Calendar connection successful:', response.data);\n      setSyncStatus(prev => ({\n        ...prev,\n        isConnected: true\n      }));\n    } catch (err) {\n      console.log('Google Calendar not connected. Error:', err.message);\n      setSyncStatus(prev => ({\n        ...prev,\n        isConnected: false\n      }));\n    }\n  }, []);\n\n  // Handle manual sync - wrapped in useCallback\n  const handleManualSync = useCallback(async () => {\n    setSyncStatus(prev => ({\n      ...prev,\n      inProgress: true\n    }));\n    try {\n      // First try to check/establish Google connection\n      try {\n        await checkConnection();\n      } catch (connErr) {\n        console.error('Failed to check Google connection:', connErr);\n        // Continue anyway - maybe we're just syncing local events\n      }\n\n      // Attempt to sync\n      try {\n        await axios.post('/api/google/sync');\n        setSyncStatus(prev => ({\n          ...prev,\n          lastSync: new Date(),\n          inProgress: false\n        }));\n        // Refresh events after sync\n        fetchEvents();\n      } catch (syncErr) {\n        console.error('Google Calendar sync error:', syncErr);\n        setSyncStatus(prev => ({\n          ...prev,\n          inProgress: false\n        }));\n        alert('Failed to sync with Google Calendar. Please check your connection and try again.');\n      }\n    } catch (err) {\n      console.error('Sync process error:', err);\n      setSyncStatus(prev => ({\n        ...prev,\n        inProgress: false\n      }));\n    }\n  }, [fetchEvents, checkConnection]);\n\n  // Handle date navigation - wrapped in useCallback\n  const handleNavigate = useCallback(date => {\n    updateDateRange({\n      start: date\n    });\n  }, [updateDateRange]);\n\n  // Handle view change - wrapped in useCallback\n  const handleViewChange = useCallback(view => {\n    changeView(view);\n  }, [changeView]);\n\n  // Handle creating a new event - wrapped in useCallback\n  const handleSelectSlot = useCallback(slotInfo => {\n    // If parent component provided a handler, call it\n    if (onSelectSlot) {\n      onSelectSlot(slotInfo);\n    }\n  }, [onSelectSlot]);\n\n  // Event styling - wrapped in useCallback\n  const eventStyleGetter = useCallback(event => {\n    let style = {\n      backgroundColor: '#3174ad',\n      borderRadius: '4px',\n      opacity: 0.8,\n      color: 'white',\n      border: '0px',\n      display: 'block'\n    };\n    if (event.status === 'tentative') {\n      style.backgroundColor = '#f39c12';\n    } else if (event.status === 'cancelled') {\n      style.backgroundColor = '#e74c3c';\n      style.textDecoration = 'line-through';\n    }\n    return {\n      style\n    };\n  }, []);\n\n  // Loading state\n  if (isLoading && events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container h-full\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-2 mb-2 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: '100%'\n      },\n      onSelectSlot: handleSelectSlot,\n      onNavigate: handleNavigate,\n      onView: handleViewChange,\n      selectable: true,\n      longPressThreshold: 250,\n      date: dateRange.start,\n      view: dateRange.view || 'month',\n      eventPropGetter: eventStyleGetter,\n      views: ['month', 'week', 'day', 'agenda'],\n      popup: true,\n      components: {\n        toolbar: props => /*#__PURE__*/_jsxDEV(CustomToolbar, {\n          ...props,\n          onSyncClick: handleManualSync,\n          isSyncing: syncStatus.inProgress,\n          isConnected: syncStatus.isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}, \"ZoKqTqQTdvnpGzNyz8LRjSy/7pw=\", false, function () {\n  return [useCalendar];\n})), \"ZoKqTqQTdvnpGzNyz8LRjSy/7pw=\", false, function () {\n  return [useCalendar];\n});\n\n// Custom toolbar component - memoize to prevent unnecessary re-renders\n_c2 = CalendarView;\nconst CustomToolbar = /*#__PURE__*/memo(_c3 = toolbar => {\n  const goToBack = () => {\n    toolbar.onNavigate('PREV');\n  };\n  const goToNext = () => {\n    toolbar.onNavigate('NEXT');\n  };\n  const goToCurrent = () => {\n    toolbar.onNavigate('TODAY');\n  };\n  const label = () => {\n    const date = moment(toolbar.date);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"rbc-toolbar-label\",\n      children: date.format('MMMM YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rbc-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToCurrent,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), toolbar.onSyncClick && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toolbar.onSyncClick,\n        disabled: toolbar.isSyncing,\n        className: toolbar.isSyncing ? 'syncing' : '',\n        children: toolbar.isSyncing ? 'Syncing...' : 'Sync Calendar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-toolbar-label\",\n      children: label()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('month'),\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('week'),\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('day'),\n        children: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('agenda'),\n        children: \"Agenda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n});\n\n// Main container component that provides context\n_c4 = CustomToolbar;\nfunction CalendarContainer({\n  onSelectSlot,\n  onAddEvent\n}) {\n  // Export the addEvent method for parent components to use\n  return /*#__PURE__*/_jsxDEV(CalendarProvider, {\n    children: /*#__PURE__*/_jsxDEV(CalendarView, {\n      onSelectSlot: onSelectSlot,\n      onAddEvent: onAddEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n}\n\n// Add display names for debugging\n_c5 = CalendarContainer;\nCalendarView.displayName = 'CalendarView';\nCustomToolbar.displayName = 'CustomToolbar';\nexport default CalendarContainer;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CalendarView$memo\");\n$RefreshReg$(_c2, \"CalendarView\");\n$RefreshReg$(_c3, \"CustomToolbar$memo\");\n$RefreshReg$(_c4, \"CustomToolbar\");\n$RefreshReg$(_c5, \"CalendarContainer\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","memo","Calendar","momentLocalizer","moment","axios","CalendarProvider","useCalendar","LoadingSpinner","ErrorAlert","jsxDEV","_jsxDEV","localizer","CalendarView","_s","_c","onSelectSlot","onAddEvent","events","setEvents","isLoading","setIsLoading","error","setError","syncStatus","setSyncStatus","lastSync","isConnected","inProgress","dateRange","updateDateRange","changeView","fetchEvents","response","get","console","log","data","formattedEvents","map","event","id","event_id","title","summary","start","Date","start_time","end","end_time","allDay","all_day","income","expenses","venue","location","description","err","length","mockEvents","checkConnection","addEvent","eventData","post","newEvent","now","prevEvents","success","message","prev","handleManualSync","connErr","syncErr","alert","handleNavigate","date","handleViewChange","view","handleSelectSlot","slotInfo","eventStyleGetter","style","backgroundColor","borderRadius","opacity","color","border","display","status","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","className","children","startAccessor","endAccessor","height","onNavigate","onView","selectable","longPressThreshold","eventPropGetter","views","popup","components","toolbar","props","CustomToolbar","onSyncClick","isSyncing","_c2","_c3","goToBack","goToNext","goToCurrent","label","format","type","onClick","disabled","_c4","CalendarContainer","_c5","displayName","$RefreshReg$"],"sources":["c:/coding/calcalc/client/src/components/calendar/CalendarContainer.jsx"],"sourcesContent":["// src/components/calendar/CalendarContainer.jsx\r\nimport React, { useEffect, useState, useCallback, memo } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport axios from 'axios';\r\nimport { CalendarProvider, useCalendar } from '../../contexts/CalendarContext';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport ErrorAlert from '../UI/ErrorAlert';\r\n\r\n// Setup the localizer for react-big-calendar\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// The actual Calendar view component - memoize to prevent unnecessary re-renders\r\nconst CalendarView = memo(({ onSelectSlot, onAddEvent }) => {\r\n  // Single source of truth for events\r\n  const [events, setEvents] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [syncStatus, setSyncStatus] = useState({\r\n    lastSync: null,\r\n    isConnected: false,\r\n    inProgress: false\r\n  });\r\n  \r\n  // Get calendar context\r\n  const { dateRange, updateDateRange, changeView } = useCalendar();\r\n\r\n  // Fetch events from API - wrapped in useCallback to maintain reference\r\n  const fetchEvents = useCallback(async () => {\r\n    if (isLoading) return; // Prevent multiple simultaneous fetches\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Use the date range in the API call if available\r\n      let response;\r\n      try {\r\n        response = await axios.get('/api/events');\r\n        console.log('Fetched events:', response.data);\r\n        \r\n        // Transform the events for the calendar\r\n        const formattedEvents = response.data.map(event => ({\r\n          id: event.event_id || event.id,\r\n          title: event.summary || event.title || 'Untitled Event',\r\n          start: new Date(event.start_time || event.start),\r\n          end: new Date(event.end_time || event.end),\r\n          allDay: event.all_day || event.allDay || false,\r\n          income: event.income || 0,\r\n          expenses: event.expenses || 0,\r\n          venue: event.location || event.venue || '',\r\n          description: event.description || ''\r\n        }));\r\n        \r\n        setEvents(formattedEvents);\r\n        \r\n        // If onAddEvent callback is provided, update parent component\r\n        if (onAddEvent) {\r\n          onAddEvent(formattedEvents);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching events from API:', err);\r\n        setError('Failed to load events from server. Using local data instead.');\r\n        \r\n        // Don't use mock data unless absolutely necessary\r\n        if (events.length === 0) {\r\n          // Only use mock data if we have no events\r\n          const mockEvents = [\r\n            {\r\n              id: 1,\r\n              title: 'Wedding at Grand Ballroom',\r\n              start: new Date(2025, 2, 15),\r\n              end: new Date(2025, 2, 16),\r\n              income: 3000,\r\n              expenses: 800,\r\n              venue: 'Grand Ballroom'\r\n            },\r\n            {\r\n              id: 2,\r\n              title: 'Corporate Event',\r\n              start: new Date(2025, 2, 20),\r\n              end: new Date(2025, 2, 20),\r\n              income: 2500,\r\n              expenses: 600,\r\n              venue: 'City Conference Center'\r\n            }\r\n          ];\r\n          \r\n          setEvents(mockEvents);\r\n          \r\n          // If onAddEvent callback is provided, update parent component\r\n          if (onAddEvent) {\r\n            onAddEvent(mockEvents);\r\n          }\r\n        }\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [events.length, isLoading, onAddEvent]);\r\n\r\n  // Initial fetch of events\r\n  useEffect(() => {\r\n    fetchEvents();\r\n    // Check connection status\r\n    checkConnection();\r\n  }, [fetchEvents]);\r\n\r\n  // Add an event through the API\r\n  const addEvent = useCallback(async (eventData) => {\r\n    try {\r\n      const response = await axios.post('/api/events', eventData);\r\n      console.log('Event created:', response.data);\r\n      \r\n      // Add the new event to the calendar\r\n      const newEvent = {\r\n        id: response.data.event_id || response.data.id || Date.now(),\r\n        title: response.data.summary || response.data.title || eventData.summary || eventData.title,\r\n        start: new Date(response.data.start_time || response.data.start || eventData.start_time || eventData.start),\r\n        end: new Date(response.data.end_time || response.data.end || eventData.end_time || eventData.end),\r\n        allDay: response.data.all_day || response.data.allDay || eventData.all_day || eventData.allDay || false,\r\n        income: response.data.income || eventData.income || 0,\r\n        expenses: response.data.expenses || eventData.expenses || 0,\r\n        venue: response.data.location || response.data.venue || eventData.location || eventData.venue || '',\r\n        description: response.data.description || eventData.description || ''\r\n      };\r\n      \r\n      setEvents(prevEvents => [...prevEvents, newEvent]);\r\n      \r\n      // If onAddEvent callback is provided, update parent component\r\n      if (onAddEvent) {\r\n        onAddEvent([...events, newEvent]);\r\n      }\r\n      \r\n      return { success: true, event: newEvent };\r\n    } catch (error) {\r\n      console.error('Error creating event:', error);\r\n      // Add event locally even if API fails\r\n      const newEvent = {\r\n        id: Date.now(),\r\n        title: eventData.summary || eventData.title,\r\n        start: new Date(eventData.start_time || eventData.start),\r\n        end: new Date(eventData.end_time || eventData.end),\r\n        allDay: eventData.all_day || eventData.allDay || false,\r\n        income: eventData.income || 0,\r\n        expenses: eventData.expenses || 0,\r\n        venue: eventData.location || eventData.venue || '',\r\n        description: eventData.description || ''\r\n      };\r\n      \r\n      setEvents(prevEvents => [...prevEvents, newEvent]);\r\n      \r\n      // If onAddEvent callback is provided, update parent component\r\n      if (onAddEvent) {\r\n        onAddEvent([...events, newEvent]);\r\n      }\r\n      \r\n      return { success: false, event: newEvent, error: error.message };\r\n    }\r\n  }, [events, onAddEvent]);\r\n\r\n  // Check Google Calendar connection\r\n  const checkConnection = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/google/calendars');\r\n      console.log('Google Calendar connection successful:', response.data);\r\n      setSyncStatus(prev => ({\r\n        ...prev,\r\n        isConnected: true\r\n      }));\r\n    } catch (err) {\r\n      console.log('Google Calendar not connected. Error:', err.message);\r\n      setSyncStatus(prev => ({\r\n        ...prev,\r\n        isConnected: false\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  // Handle manual sync - wrapped in useCallback\r\n  const handleManualSync = useCallback(async () => {\r\n    setSyncStatus(prev => ({\r\n      ...prev,\r\n      inProgress: true\r\n    }));\r\n    \r\n    try {\r\n      // First try to check/establish Google connection\r\n      try {\r\n        await checkConnection();\r\n      } catch (connErr) {\r\n        console.error('Failed to check Google connection:', connErr);\r\n        // Continue anyway - maybe we're just syncing local events\r\n      }\r\n      \r\n      // Attempt to sync\r\n      try {\r\n        await axios.post('/api/google/sync');\r\n        setSyncStatus(prev => ({\r\n          ...prev,\r\n          lastSync: new Date(),\r\n          inProgress: false\r\n        }));\r\n        // Refresh events after sync\r\n        fetchEvents();\r\n      } catch (syncErr) {\r\n        console.error('Google Calendar sync error:', syncErr);\r\n        setSyncStatus(prev => ({\r\n          ...prev,\r\n          inProgress: false\r\n        }));\r\n        alert('Failed to sync with Google Calendar. Please check your connection and try again.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Sync process error:', err);\r\n      setSyncStatus(prev => ({\r\n        ...prev,\r\n        inProgress: false\r\n      }));\r\n    }\r\n  }, [fetchEvents, checkConnection]);\r\n\r\n  // Handle date navigation - wrapped in useCallback\r\n  const handleNavigate = useCallback((date) => {\r\n    updateDateRange({\r\n      start: date\r\n    });\r\n  }, [updateDateRange]);\r\n\r\n  // Handle view change - wrapped in useCallback\r\n  const handleViewChange = useCallback((view) => {\r\n    changeView(view);\r\n  }, [changeView]);\r\n\r\n  // Handle creating a new event - wrapped in useCallback\r\n  const handleSelectSlot = useCallback((slotInfo) => {\r\n    // If parent component provided a handler, call it\r\n    if (onSelectSlot) {\r\n      onSelectSlot(slotInfo);\r\n    }\r\n  }, [onSelectSlot]);\r\n\r\n  // Event styling - wrapped in useCallback\r\n  const eventStyleGetter = useCallback((event) => {\r\n    let style = {\r\n      backgroundColor: '#3174ad',\r\n      borderRadius: '4px',\r\n      opacity: 0.8,\r\n      color: 'white',\r\n      border: '0px',\r\n      display: 'block'\r\n    };\r\n    \r\n    if (event.status === 'tentative') {\r\n      style.backgroundColor = '#f39c12';\r\n    } else if (event.status === 'cancelled') {\r\n      style.backgroundColor = '#e74c3c';\r\n      style.textDecoration = 'line-through';\r\n    }\r\n    \r\n    return { style };\r\n  }, []);\r\n\r\n  // Loading state\r\n  if (isLoading && events.length === 0) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-container h-full\">\r\n      {error && (\r\n        <div className=\"bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-2 mb-2 text-sm\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: '100%' }}\r\n        onSelectSlot={handleSelectSlot}\r\n        onNavigate={handleNavigate}\r\n        onView={handleViewChange}\r\n        selectable={true}\r\n        longPressThreshold={250}\r\n        date={dateRange.start}\r\n        view={dateRange.view || 'month'}\r\n        eventPropGetter={eventStyleGetter}\r\n        views={['month', 'week', 'day', 'agenda']}\r\n        popup\r\n        components={{\r\n          toolbar: props => (\r\n            <CustomToolbar \r\n              {...props} \r\n              onSyncClick={handleManualSync}\r\n              isSyncing={syncStatus.inProgress}\r\n              isConnected={syncStatus.isConnected}\r\n            />\r\n          )\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\n// Custom toolbar component - memoize to prevent unnecessary re-renders\r\nconst CustomToolbar = memo((toolbar) => {\r\n  const goToBack = () => {\r\n    toolbar.onNavigate('PREV');\r\n  };\r\n\r\n  const goToNext = () => {\r\n    toolbar.onNavigate('NEXT');\r\n  };\r\n\r\n  const goToCurrent = () => {\r\n    toolbar.onNavigate('TODAY');\r\n  };\r\n\r\n  const label = () => {\r\n    const date = moment(toolbar.date);\r\n    return (\r\n      <span className=\"rbc-toolbar-label\">{date.format('MMMM YYYY')}</span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"rbc-toolbar\">\r\n      <div className=\"rbc-btn-group\">\r\n        <button type=\"button\" onClick={goToCurrent}>Today</button>\r\n        <button type=\"button\" onClick={goToBack}>Back</button>\r\n        <button type=\"button\" onClick={goToNext}>Next</button>\r\n        {/* Add the sync button directly to the toolbar */}\r\n        {toolbar.onSyncClick && (\r\n          <button \r\n            type=\"button\" \r\n            onClick={toolbar.onSyncClick}\r\n            disabled={toolbar.isSyncing}\r\n            className={toolbar.isSyncing ? 'syncing' : ''}\r\n          >\r\n            {toolbar.isSyncing ? 'Syncing...' : 'Sync Calendar'}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"rbc-toolbar-label\">{label()}</div>\r\n      <div className=\"rbc-btn-group\">\r\n        <button type=\"button\" onClick={() => toolbar.onView('month')}>Month</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('week')}>Week</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('day')}>Day</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('agenda')}>Agenda</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n// Main container component that provides context\r\nfunction CalendarContainer({ onSelectSlot, onAddEvent }) {\r\n  // Export the addEvent method for parent components to use\r\n  return (\r\n    <CalendarProvider>\r\n      <CalendarView \r\n        onSelectSlot={onSelectSlot} \r\n        onAddEvent={onAddEvent}\r\n      />\r\n    </CalendarProvider>\r\n  );\r\n}\r\n\r\n// Add display names for debugging\r\nCalendarView.displayName = 'CalendarView';\r\nCustomToolbar.displayName = 'CustomToolbar';\r\n\r\nexport default CalendarContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}