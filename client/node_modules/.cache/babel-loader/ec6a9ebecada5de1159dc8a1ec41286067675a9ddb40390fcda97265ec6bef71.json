{"ast":null,"code":"var _jsxFileName = \"c:\\\\coding\\\\calcalc\\\\client\\\\src\\\\components\\\\calendar\\\\CalendarContainer.jsx\",\n  _s = $RefreshSig$();\n// src/components/calendar/CalendarContainer.jsx\nimport React, { useEffect, useState, useCallback, memo } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport axios from 'axios';\nimport { CalendarProvider, useCalendar } from '../../contexts/CalendarContext';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport ErrorAlert from '../UI/ErrorAlert';\n\n// Create a custom event context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventContext = /*#__PURE__*/React.createContext();\n\n// Setup the localizer for react-big-calendar\nconst localizer = momentLocalizer(moment);\n\n// The actual Calendar view component - memoize to prevent unnecessary re-renders\nconst CalendarView = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  onSelectSlot\n}) => {\n  _s();\n  // Single source of truth for events\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [syncStatus, setSyncStatus] = useState({\n    lastSync: null,\n    isConnected: false,\n    inProgress: false\n  });\n\n  // Get calendar context\n  const {\n    dateRange,\n    updateDateRange,\n    changeView\n  } = useCalendar();\n\n  // Fetch events from API - wrapped in useCallback to maintain reference\n  const fetchEvents = useCallback(async () => {\n    if (isLoading) return; // Prevent multiple simultaneous fetches\n\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Use the date range in the API call if available\n      let response;\n      if (dateRange && dateRange.start && dateRange.end) {\n        const formattedStart = moment(dateRange.start).format('YYYY-MM-DD');\n        const formattedEnd = moment(dateRange.end).format('YYYY-MM-DD');\n        try {\n          response = await axios.get(`/api/events/range/${formattedStart}/${formattedEnd}`);\n        } catch (rangeErr) {\n          // Fallback to all events if range query fails\n          console.log('Range query failed, fetching all events');\n          response = await axios.get('/api/events');\n        }\n      } else {\n        response = await axios.get('/api/events');\n      }\n\n      // Transform the events for the calendar\n      const formattedEvents = response.data.map(event => ({\n        id: event.event_id || event.id,\n        title: event.summary || event.title || 'Untitled Event',\n        start: new Date(event.start_time || event.start),\n        end: new Date(event.end_time || event.end),\n        allDay: event.all_day || event.allDay || false,\n        income: event.income || 0,\n        expenses: event.expenses || 0,\n        venue: event.location || event.venue || '',\n        description: event.description || ''\n      }));\n      setEvents(formattedEvents);\n    } catch (err) {\n      console.error('Error fetching events:', err);\n      setError('Failed to load events. Please try again later.');\n\n      // Use mock data as fallback\n      const mockEvents = [{\n        id: 1,\n        title: 'Wedding at Grand Ballroom',\n        start: new Date(2025, 2, 15),\n        end: new Date(2025, 2, 16),\n        income: 3000,\n        expenses: 800,\n        venue: 'Grand Ballroom'\n      }, {\n        id: 2,\n        title: 'Corporate Event',\n        start: new Date(2025, 2, 20),\n        end: new Date(2025, 2, 20),\n        income: 2500,\n        expenses: 600,\n        venue: 'City Conference Center'\n      }];\n      setEvents(mockEvents);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [dateRange, isLoading]); // Only depend on dateRange and loading state\n\n  // Initial fetch of events\n  useEffect(() => {\n    fetchEvents();\n    // Check connection status\n    checkConnection();\n  }, [fetchEvents]);\n\n  // Check Google Calendar connection\n  const checkConnection = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/google/calendars');\n      setSyncStatus(prev => ({\n        ...prev,\n        isConnected: true\n      }));\n    } catch (err) {\n      setSyncStatus(prev => ({\n        ...prev,\n        isConnected: false\n      }));\n    }\n  }, []);\n\n  // Handle manual sync - wrapped in useCallback\n  const handleManualSync = useCallback(async () => {\n    setSyncStatus(prev => ({\n      ...prev,\n      inProgress: true\n    }));\n    try {\n      await axios.post('/api/google/sync');\n      setSyncStatus(prev => ({\n        ...prev,\n        lastSync: new Date(),\n        inProgress: false\n      }));\n      // Refresh events after sync\n      fetchEvents();\n    } catch (err) {\n      console.error('Sync error:', err);\n      setSyncStatus(prev => ({\n        ...prev,\n        inProgress: false\n      }));\n    }\n  }, [fetchEvents]);\n\n  // Handle date navigation - wrapped in useCallback\n  const handleNavigate = useCallback(date => {\n    updateDateRange({\n      start: date\n    });\n  }, [updateDateRange]);\n\n  // Handle view change - wrapped in useCallback\n  const handleViewChange = useCallback(view => {\n    changeView(view);\n  }, [changeView]);\n\n  // Handle creating a new event - wrapped in useCallback\n  const handleSelectSlot = useCallback(slotInfo => {\n    // If parent component provided a handler, call it\n    if (onSelectSlot) {\n      onSelectSlot(slotInfo);\n    }\n  }, [onSelectSlot]);\n\n  // Event styling - wrapped in useCallback\n  const eventStyleGetter = useCallback(event => {\n    let style = {\n      backgroundColor: '#3174ad',\n      borderRadius: '4px',\n      opacity: 0.8,\n      color: 'white',\n      border: '0px',\n      display: 'block'\n    };\n    if (event.status === 'tentative') {\n      style.backgroundColor = '#f39c12';\n    } else if (event.status === 'cancelled') {\n      style.backgroundColor = '#e74c3c';\n      style.textDecoration = 'line-through';\n    }\n    return {\n      style\n    };\n  }, []);\n\n  // Loading state\n  if (isLoading && events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Error state\n  if (error && events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: error,\n      onRetry: fetchEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container h-full\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: '100%'\n      },\n      onSelectSlot: handleSelectSlot,\n      onNavigate: handleNavigate,\n      onView: handleViewChange,\n      selectable: true,\n      longPressThreshold: 250,\n      date: dateRange.start,\n      view: dateRange.view || 'month',\n      eventPropGetter: eventStyleGetter,\n      views: ['month', 'week', 'day', 'agenda'],\n      popup: true,\n      components: {\n        toolbar: props => /*#__PURE__*/_jsxDEV(CustomToolbar, {\n          ...props,\n          onSyncClick: handleManualSync,\n          isSyncing: syncStatus.inProgress,\n          isConnected: syncStatus.isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}, \"AS7zEbyplNFcyv+diy/8IKcHIa8=\", false, function () {\n  return [useCalendar];\n})), \"AS7zEbyplNFcyv+diy/8IKcHIa8=\", false, function () {\n  return [useCalendar];\n});\n\n// Custom toolbar component - memoize to prevent unnecessary re-renders\n_c2 = CalendarView;\nconst CustomToolbar = /*#__PURE__*/memo(_c3 = toolbar => {\n  const goToBack = () => {\n    toolbar.onNavigate('PREV');\n  };\n  const goToNext = () => {\n    toolbar.onNavigate('NEXT');\n  };\n  const goToCurrent = () => {\n    toolbar.onNavigate('TODAY');\n  };\n  const label = () => {\n    const date = moment(toolbar.date);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"rbc-toolbar-label\",\n      children: date.format('MMMM YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rbc-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToCurrent,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), toolbar.onSyncClick && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toolbar.onSyncClick,\n        disabled: toolbar.isSyncing || !toolbar.isConnected,\n        className: toolbar.isSyncing ? 'syncing' : '',\n        children: toolbar.isSyncing ? 'Syncing...' : 'Sync Calendar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-toolbar-label\",\n      children: label()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('month'),\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('week'),\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('day'),\n        children: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('agenda'),\n        children: \"Agenda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n});\n\n// Main container component that provides context - simpler approach\n_c4 = CustomToolbar;\nfunction CalendarContainer({\n  onSelectSlot\n}) {\n  // Much simpler container that just wraps CalendarView with CalendarProvider\n  return /*#__PURE__*/_jsxDEV(CalendarProvider, {\n    children: /*#__PURE__*/_jsxDEV(CalendarView, {\n      onSelectSlot: onSelectSlot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n\n// Add display names for debugging\n_c5 = CalendarContainer;\nCalendarView.displayName = 'CalendarView';\nCustomToolbar.displayName = 'CustomToolbar';\nexport default CalendarContainer;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CalendarView$memo\");\n$RefreshReg$(_c2, \"CalendarView\");\n$RefreshReg$(_c3, \"CustomToolbar$memo\");\n$RefreshReg$(_c4, \"CustomToolbar\");\n$RefreshReg$(_c5, \"CalendarContainer\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","memo","Calendar","momentLocalizer","moment","axios","CalendarProvider","useCalendar","LoadingSpinner","ErrorAlert","jsxDEV","_jsxDEV","EventContext","createContext","localizer","CalendarView","_s","_c","onSelectSlot","events","setEvents","isLoading","setIsLoading","error","setError","syncStatus","setSyncStatus","lastSync","isConnected","inProgress","dateRange","updateDateRange","changeView","fetchEvents","response","start","end","formattedStart","format","formattedEnd","get","rangeErr","console","log","formattedEvents","data","map","event","id","event_id","title","summary","Date","start_time","end_time","allDay","all_day","income","expenses","venue","location","description","err","mockEvents","checkConnection","prev","handleManualSync","post","handleNavigate","date","handleViewChange","view","handleSelectSlot","slotInfo","eventStyleGetter","style","backgroundColor","borderRadius","opacity","color","border","display","status","textDecoration","length","fileName","_jsxFileName","lineNumber","columnNumber","message","onRetry","className","children","startAccessor","endAccessor","height","onNavigate","onView","selectable","longPressThreshold","eventPropGetter","views","popup","components","toolbar","props","CustomToolbar","onSyncClick","isSyncing","_c2","_c3","goToBack","goToNext","goToCurrent","label","type","onClick","disabled","_c4","CalendarContainer","_c5","displayName","$RefreshReg$"],"sources":["c:/coding/calcalc/client/src/components/calendar/CalendarContainer.jsx"],"sourcesContent":["// src/components/calendar/CalendarContainer.jsx\r\nimport React, { useEffect, useState, useCallback, memo } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport axios from 'axios';\r\nimport { CalendarProvider, useCalendar } from '../../contexts/CalendarContext';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport ErrorAlert from '../UI/ErrorAlert';\r\n\r\n// Create a custom event context\r\nexport const EventContext = React.createContext();\r\n\r\n// Setup the localizer for react-big-calendar\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// The actual Calendar view component - memoize to prevent unnecessary re-renders\r\nconst CalendarView = memo(({ onSelectSlot }) => {\r\n  // Single source of truth for events\r\n  const [events, setEvents] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [syncStatus, setSyncStatus] = useState({\r\n    lastSync: null,\r\n    isConnected: false,\r\n    inProgress: false\r\n  });\r\n  \r\n  // Get calendar context\r\n  const { dateRange, updateDateRange, changeView } = useCalendar();\r\n\r\n  // Fetch events from API - wrapped in useCallback to maintain reference\r\n  const fetchEvents = useCallback(async () => {\r\n    if (isLoading) return; // Prevent multiple simultaneous fetches\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Use the date range in the API call if available\r\n      let response;\r\n      if (dateRange && dateRange.start && dateRange.end) {\r\n        const formattedStart = moment(dateRange.start).format('YYYY-MM-DD');\r\n        const formattedEnd = moment(dateRange.end).format('YYYY-MM-DD');\r\n        \r\n        try {\r\n          response = await axios.get(`/api/events/range/${formattedStart}/${formattedEnd}`);\r\n        } catch (rangeErr) {\r\n          // Fallback to all events if range query fails\r\n          console.log('Range query failed, fetching all events');\r\n          response = await axios.get('/api/events');\r\n        }\r\n      } else {\r\n        response = await axios.get('/api/events');\r\n      }\r\n      \r\n      // Transform the events for the calendar\r\n      const formattedEvents = response.data.map(event => ({\r\n        id: event.event_id || event.id,\r\n        title: event.summary || event.title || 'Untitled Event',\r\n        start: new Date(event.start_time || event.start),\r\n        end: new Date(event.end_time || event.end),\r\n        allDay: event.all_day || event.allDay || false,\r\n        income: event.income || 0,\r\n        expenses: event.expenses || 0,\r\n        venue: event.location || event.venue || '',\r\n        description: event.description || ''\r\n      }));\r\n      \r\n      setEvents(formattedEvents);\r\n    } catch (err) {\r\n      console.error('Error fetching events:', err);\r\n      setError('Failed to load events. Please try again later.');\r\n      \r\n      // Use mock data as fallback\r\n      const mockEvents = [\r\n        {\r\n          id: 1,\r\n          title: 'Wedding at Grand Ballroom',\r\n          start: new Date(2025, 2, 15),\r\n          end: new Date(2025, 2, 16),\r\n          income: 3000,\r\n          expenses: 800,\r\n          venue: 'Grand Ballroom'\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Corporate Event',\r\n          start: new Date(2025, 2, 20),\r\n          end: new Date(2025, 2, 20),\r\n          income: 2500,\r\n          expenses: 600,\r\n          venue: 'City Conference Center'\r\n        }\r\n      ];\r\n      \r\n      setEvents(mockEvents);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [dateRange, isLoading]); // Only depend on dateRange and loading state\r\n\r\n  // Initial fetch of events\r\n  useEffect(() => {\r\n    fetchEvents();\r\n    // Check connection status\r\n    checkConnection();\r\n  }, [fetchEvents]);\r\n\r\n  // Check Google Calendar connection\r\n  const checkConnection = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/google/calendars');\r\n      setSyncStatus(prev => ({\r\n        ...prev,\r\n        isConnected: true\r\n      }));\r\n    } catch (err) {\r\n      setSyncStatus(prev => ({\r\n        ...prev,\r\n        isConnected: false\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  // Handle manual sync - wrapped in useCallback\r\n  const handleManualSync = useCallback(async () => {\r\n    setSyncStatus(prev => ({\r\n      ...prev,\r\n      inProgress: true\r\n    }));\r\n    \r\n    try {\r\n      await axios.post('/api/google/sync');\r\n      setSyncStatus(prev => ({\r\n        ...prev,\r\n        lastSync: new Date(),\r\n        inProgress: false\r\n      }));\r\n      // Refresh events after sync\r\n      fetchEvents();\r\n    } catch (err) {\r\n      console.error('Sync error:', err);\r\n      setSyncStatus(prev => ({\r\n        ...prev,\r\n        inProgress: false\r\n      }));\r\n    }\r\n  }, [fetchEvents]);\r\n\r\n  // Handle date navigation - wrapped in useCallback\r\n  const handleNavigate = useCallback((date) => {\r\n    updateDateRange({\r\n      start: date\r\n    });\r\n  }, [updateDateRange]);\r\n\r\n  // Handle view change - wrapped in useCallback\r\n  const handleViewChange = useCallback((view) => {\r\n    changeView(view);\r\n  }, [changeView]);\r\n\r\n  // Handle creating a new event - wrapped in useCallback\r\n  const handleSelectSlot = useCallback((slotInfo) => {\r\n    // If parent component provided a handler, call it\r\n    if (onSelectSlot) {\r\n      onSelectSlot(slotInfo);\r\n    }\r\n  }, [onSelectSlot]);\r\n\r\n  // Event styling - wrapped in useCallback\r\n  const eventStyleGetter = useCallback((event) => {\r\n    let style = {\r\n      backgroundColor: '#3174ad',\r\n      borderRadius: '4px',\r\n      opacity: 0.8,\r\n      color: 'white',\r\n      border: '0px',\r\n      display: 'block'\r\n    };\r\n    \r\n    if (event.status === 'tentative') {\r\n      style.backgroundColor = '#f39c12';\r\n    } else if (event.status === 'cancelled') {\r\n      style.backgroundColor = '#e74c3c';\r\n      style.textDecoration = 'line-through';\r\n    }\r\n    \r\n    return { style };\r\n  }, []);\r\n\r\n  // Loading state\r\n  if (isLoading && events.length === 0) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  // Error state\r\n  if (error && events.length === 0) {\r\n    return (\r\n      <ErrorAlert \r\n        message={error} \r\n        onRetry={fetchEvents}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-container h-full\">\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: '100%' }}\r\n        onSelectSlot={handleSelectSlot}\r\n        onNavigate={handleNavigate}\r\n        onView={handleViewChange}\r\n        selectable={true}\r\n        longPressThreshold={250}\r\n        date={dateRange.start}\r\n        view={dateRange.view || 'month'}\r\n        eventPropGetter={eventStyleGetter}\r\n        views={['month', 'week', 'day', 'agenda']}\r\n        popup\r\n        components={{\r\n          toolbar: props => (\r\n            <CustomToolbar \r\n              {...props} \r\n              onSyncClick={handleManualSync}\r\n              isSyncing={syncStatus.inProgress}\r\n              isConnected={syncStatus.isConnected}\r\n            />\r\n          )\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\n// Custom toolbar component - memoize to prevent unnecessary re-renders\r\nconst CustomToolbar = memo((toolbar) => {\r\n  const goToBack = () => {\r\n    toolbar.onNavigate('PREV');\r\n  };\r\n\r\n  const goToNext = () => {\r\n    toolbar.onNavigate('NEXT');\r\n  };\r\n\r\n  const goToCurrent = () => {\r\n    toolbar.onNavigate('TODAY');\r\n  };\r\n\r\n  const label = () => {\r\n    const date = moment(toolbar.date);\r\n    return (\r\n      <span className=\"rbc-toolbar-label\">{date.format('MMMM YYYY')}</span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"rbc-toolbar\">\r\n      <div className=\"rbc-btn-group\">\r\n        <button type=\"button\" onClick={goToCurrent}>Today</button>\r\n        <button type=\"button\" onClick={goToBack}>Back</button>\r\n        <button type=\"button\" onClick={goToNext}>Next</button>\r\n        {/* Add the sync button directly to the toolbar */}\r\n        {toolbar.onSyncClick && (\r\n          <button \r\n            type=\"button\" \r\n            onClick={toolbar.onSyncClick}\r\n            disabled={toolbar.isSyncing || !toolbar.isConnected}\r\n            className={toolbar.isSyncing ? 'syncing' : ''}\r\n          >\r\n            {toolbar.isSyncing ? 'Syncing...' : 'Sync Calendar'}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"rbc-toolbar-label\">{label()}</div>\r\n      <div className=\"rbc-btn-group\">\r\n        <button type=\"button\" onClick={() => toolbar.onView('month')}>Month</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('week')}>Week</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('day')}>Day</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('agenda')}>Agenda</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n// Main container component that provides context - simpler approach\r\nfunction CalendarContainer({ onSelectSlot }) {\r\n  // Much simpler container that just wraps CalendarView with CalendarProvider\r\n  return (\r\n    <CalendarProvider>\r\n      <CalendarView onSelectSlot={onSelectSlot} />\r\n    </CalendarProvider>\r\n  );\r\n}\r\n\r\n// Add display names for debugging\r\nCalendarView.displayName = 'CalendarView';\r\nCustomToolbar.displayName = 'CustomToolbar';\r\n\r\nexport default CalendarContainer;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,IAAI,QAAQ,OAAO;AACrE,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,gCAAgC;AAC9E,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,UAAU,MAAM,kBAAkB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGf,KAAK,CAACgB,aAAa,CAAC,CAAC;;AAEjD;AACA,MAAMC,SAAS,GAAGX,eAAe,CAACC,MAAM,CAAC;;AAEzC;AACA,MAAMW,YAAY,gBAAAC,EAAA,cAAGf,IAAI,CAAAgB,EAAA,GAAAD,EAAA,CAAC,CAAC;EAAEE;AAAa,CAAC,KAAK;EAAAF,EAAA;EAC9C;EACA,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC;IAC3C4B,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE,KAAK;IAClBC,UAAU,EAAE;EACd,CAAC,CAAC;;EAEF;EACA,MAAM;IAAEC,SAAS;IAAEC,eAAe;IAAEC;EAAW,CAAC,GAAGzB,WAAW,CAAC,CAAC;;EAEhE;EACA,MAAM0B,WAAW,GAAGjC,WAAW,CAAC,YAAY;IAC1C,IAAIqB,SAAS,EAAE,OAAO,CAAC;;IAEvBC,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,IAAIU,QAAQ;MACZ,IAAIJ,SAAS,IAAIA,SAAS,CAACK,KAAK,IAAIL,SAAS,CAACM,GAAG,EAAE;QACjD,MAAMC,cAAc,GAAGjC,MAAM,CAAC0B,SAAS,CAACK,KAAK,CAAC,CAACG,MAAM,CAAC,YAAY,CAAC;QACnE,MAAMC,YAAY,GAAGnC,MAAM,CAAC0B,SAAS,CAACM,GAAG,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC;QAE/D,IAAI;UACFJ,QAAQ,GAAG,MAAM7B,KAAK,CAACmC,GAAG,CAAC,qBAAqBH,cAAc,IAAIE,YAAY,EAAE,CAAC;QACnF,CAAC,CAAC,OAAOE,QAAQ,EAAE;UACjB;UACAC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;UACtDT,QAAQ,GAAG,MAAM7B,KAAK,CAACmC,GAAG,CAAC,aAAa,CAAC;QAC3C;MACF,CAAC,MAAM;QACLN,QAAQ,GAAG,MAAM7B,KAAK,CAACmC,GAAG,CAAC,aAAa,CAAC;MAC3C;;MAEA;MACA,MAAMI,eAAe,GAAGV,QAAQ,CAACW,IAAI,CAACC,GAAG,CAACC,KAAK,KAAK;QAClDC,EAAE,EAAED,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACC,EAAE;QAC9BE,KAAK,EAAEH,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAACG,KAAK,IAAI,gBAAgB;QACvDf,KAAK,EAAE,IAAIiB,IAAI,CAACL,KAAK,CAACM,UAAU,IAAIN,KAAK,CAACZ,KAAK,CAAC;QAChDC,GAAG,EAAE,IAAIgB,IAAI,CAACL,KAAK,CAACO,QAAQ,IAAIP,KAAK,CAACX,GAAG,CAAC;QAC1CmB,MAAM,EAAER,KAAK,CAACS,OAAO,IAAIT,KAAK,CAACQ,MAAM,IAAI,KAAK;QAC9CE,MAAM,EAAEV,KAAK,CAACU,MAAM,IAAI,CAAC;QACzBC,QAAQ,EAAEX,KAAK,CAACW,QAAQ,IAAI,CAAC;QAC7BC,KAAK,EAAEZ,KAAK,CAACa,QAAQ,IAAIb,KAAK,CAACY,KAAK,IAAI,EAAE;QAC1CE,WAAW,EAAEd,KAAK,CAACc,WAAW,IAAI;MACpC,CAAC,CAAC,CAAC;MAEHzC,SAAS,CAACwB,eAAe,CAAC;IAC5B,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZpB,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEuC,GAAG,CAAC;MAC5CtC,QAAQ,CAAC,gDAAgD,CAAC;;MAE1D;MACA,MAAMuC,UAAU,GAAG,CACjB;QACEf,EAAE,EAAE,CAAC;QACLE,KAAK,EAAE,2BAA2B;QAClCf,KAAK,EAAE,IAAIiB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;QAC5BhB,GAAG,EAAE,IAAIgB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;QAC1BK,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE,GAAG;QACbC,KAAK,EAAE;MACT,CAAC,EACD;QACEX,EAAE,EAAE,CAAC;QACLE,KAAK,EAAE,iBAAiB;QACxBf,KAAK,EAAE,IAAIiB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;QAC5BhB,GAAG,EAAE,IAAIgB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;QAC1BK,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE,GAAG;QACbC,KAAK,EAAE;MACT,CAAC,CACF;MAEDvC,SAAS,CAAC2C,UAAU,CAAC;IACvB,CAAC,SAAS;MACRzC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACQ,SAAS,EAAET,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE5B;EACAvB,SAAS,CAAC,MAAM;IACdmC,WAAW,CAAC,CAAC;IACb;IACA+B,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAAC/B,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAM+B,eAAe,GAAGhE,WAAW,CAAC,YAAY;IAC9C,IAAI;MACF,MAAMkC,QAAQ,GAAG,MAAM7B,KAAK,CAACmC,GAAG,CAAC,uBAAuB,CAAC;MACzDd,aAAa,CAACuC,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPrC,WAAW,EAAE;MACf,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOkC,GAAG,EAAE;MACZpC,aAAa,CAACuC,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPrC,WAAW,EAAE;MACf,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMsC,gBAAgB,GAAGlE,WAAW,CAAC,YAAY;IAC/C0B,aAAa,CAACuC,IAAI,KAAK;MACrB,GAAGA,IAAI;MACPpC,UAAU,EAAE;IACd,CAAC,CAAC,CAAC;IAEH,IAAI;MACF,MAAMxB,KAAK,CAAC8D,IAAI,CAAC,kBAAkB,CAAC;MACpCzC,aAAa,CAACuC,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPtC,QAAQ,EAAE,IAAIyB,IAAI,CAAC,CAAC;QACpBvB,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;MACH;MACAI,WAAW,CAAC,CAAC;IACf,CAAC,CAAC,OAAO6B,GAAG,EAAE;MACZpB,OAAO,CAACnB,KAAK,CAAC,aAAa,EAAEuC,GAAG,CAAC;MACjCpC,aAAa,CAACuC,IAAI,KAAK;QACrB,GAAGA,IAAI;QACPpC,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACI,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMmC,cAAc,GAAGpE,WAAW,CAAEqE,IAAI,IAAK;IAC3CtC,eAAe,CAAC;MACdI,KAAK,EAAEkC;IACT,CAAC,CAAC;EACJ,CAAC,EAAE,CAACtC,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMuC,gBAAgB,GAAGtE,WAAW,CAAEuE,IAAI,IAAK;IAC7CvC,UAAU,CAACuC,IAAI,CAAC;EAClB,CAAC,EAAE,CAACvC,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMwC,gBAAgB,GAAGxE,WAAW,CAAEyE,QAAQ,IAAK;IACjD;IACA,IAAIvD,YAAY,EAAE;MAChBA,YAAY,CAACuD,QAAQ,CAAC;IACxB;EACF,CAAC,EAAE,CAACvD,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMwD,gBAAgB,GAAG1E,WAAW,CAAE+C,KAAK,IAAK;IAC9C,IAAI4B,KAAK,GAAG;MACVC,eAAe,EAAE,SAAS;MAC1BC,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,GAAG;MACZC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;IACX,CAAC;IAED,IAAIlC,KAAK,CAACmC,MAAM,KAAK,WAAW,EAAE;MAChCP,KAAK,CAACC,eAAe,GAAG,SAAS;IACnC,CAAC,MAAM,IAAI7B,KAAK,CAACmC,MAAM,KAAK,WAAW,EAAE;MACvCP,KAAK,CAACC,eAAe,GAAG,SAAS;MACjCD,KAAK,CAACQ,cAAc,GAAG,cAAc;IACvC;IAEA,OAAO;MAAER;IAAM,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAItD,SAAS,IAAIF,MAAM,CAACiE,MAAM,KAAK,CAAC,EAAE;IACpC,oBAAOzE,OAAA,CAACH,cAAc;MAAA6E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3B;;EAEA;EACA,IAAIjE,KAAK,IAAIJ,MAAM,CAACiE,MAAM,KAAK,CAAC,EAAE;IAChC,oBACEzE,OAAA,CAACF,UAAU;MACTgF,OAAO,EAAElE,KAAM;MACfmE,OAAO,EAAEzD;IAAY;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAEN;EAEA,oBACE7E,OAAA;IAAKgF,SAAS,EAAC,2BAA2B;IAAAC,QAAA,eACxCjF,OAAA,CAACT,QAAQ;MACPY,SAAS,EAAEA,SAAU;MACrBK,MAAM,EAAEA,MAAO;MACf0E,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC,KAAK;MACjBnB,KAAK,EAAE;QAAEoB,MAAM,EAAE;MAAO,CAAE;MAC1B7E,YAAY,EAAEsD,gBAAiB;MAC/BwB,UAAU,EAAE5B,cAAe;MAC3B6B,MAAM,EAAE3B,gBAAiB;MACzB4B,UAAU,EAAE,IAAK;MACjBC,kBAAkB,EAAE,GAAI;MACxB9B,IAAI,EAAEvC,SAAS,CAACK,KAAM;MACtBoC,IAAI,EAAEzC,SAAS,CAACyC,IAAI,IAAI,OAAQ;MAChC6B,eAAe,EAAE1B,gBAAiB;MAClC2B,KAAK,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAE;MAC1CC,KAAK;MACLC,UAAU,EAAE;QACVC,OAAO,EAAEC,KAAK,iBACZ9F,OAAA,CAAC+F,aAAa;UAAA,GACRD,KAAK;UACTE,WAAW,EAAEzC,gBAAiB;UAC9B0C,SAAS,EAAEnF,UAAU,CAACI,UAAW;UACjCD,WAAW,EAAEH,UAAU,CAACG;QAAY;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAEL;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;EAAA,QAhNoDjF,WAAW;AAAA,EAgN/D,CAAC;EAAA,QAhNmDA,WAAW;AAAA,EAgN9D;;AAEF;AAAAsG,GAAA,GA9NM9F,YAAY;AA+NlB,MAAM2F,aAAa,gBAAGzG,IAAI,CAAA6G,GAAA,GAAEN,OAAO,IAAK;EACtC,MAAMO,QAAQ,GAAGA,CAAA,KAAM;IACrBP,OAAO,CAACR,UAAU,CAAC,MAAM,CAAC;EAC5B,CAAC;EAED,MAAMgB,QAAQ,GAAGA,CAAA,KAAM;IACrBR,OAAO,CAACR,UAAU,CAAC,MAAM,CAAC;EAC5B,CAAC;EAED,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACxBT,OAAO,CAACR,UAAU,CAAC,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMkB,KAAK,GAAGA,CAAA,KAAM;IAClB,MAAM7C,IAAI,GAAGjE,MAAM,CAACoG,OAAO,CAACnC,IAAI,CAAC;IACjC,oBACE1D,OAAA;MAAMgF,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEvB,IAAI,CAAC/B,MAAM,CAAC,WAAW;IAAC;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAEzE,CAAC;EAED,oBACE7E,OAAA;IAAKgF,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BjF,OAAA;MAAKgF,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BjF,OAAA;QAAQwG,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEH,WAAY;QAAArB,QAAA,EAAC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1D7E,OAAA;QAAQwG,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEL,QAAS;QAAAnB,QAAA,EAAC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtD7E,OAAA;QAAQwG,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEJ,QAAS;QAAApB,QAAA,EAAC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAErDgB,OAAO,CAACG,WAAW,iBAClBhG,OAAA;QACEwG,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEZ,OAAO,CAACG,WAAY;QAC7BU,QAAQ,EAAEb,OAAO,CAACI,SAAS,IAAI,CAACJ,OAAO,CAAC5E,WAAY;QACpD+D,SAAS,EAAEa,OAAO,CAACI,SAAS,GAAG,SAAS,GAAG,EAAG;QAAAhB,QAAA,EAE7CY,OAAO,CAACI,SAAS,GAAG,YAAY,GAAG;MAAe;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN7E,OAAA;MAAKgF,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEsB,KAAK,CAAC;IAAC;MAAA7B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClD7E,OAAA;MAAKgF,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BjF,OAAA;QAAQwG,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMZ,OAAO,CAACP,MAAM,CAAC,OAAO,CAAE;QAAAL,QAAA,EAAC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5E7E,OAAA;QAAQwG,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMZ,OAAO,CAACP,MAAM,CAAC,MAAM,CAAE;QAAAL,QAAA,EAAC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1E7E,OAAA;QAAQwG,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMZ,OAAO,CAACP,MAAM,CAAC,KAAK,CAAE;QAAAL,QAAA,EAAC;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxE7E,OAAA;QAAQwG,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMZ,OAAO,CAACP,MAAM,CAAC,QAAQ,CAAE;QAAAL,QAAA,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC,CAAC;;AAEF;AAAA8B,GAAA,GAjDMZ,aAAa;AAkDnB,SAASa,iBAAiBA,CAAC;EAAErG;AAAa,CAAC,EAAE;EAC3C;EACA,oBACEP,OAAA,CAACL,gBAAgB;IAAAsF,QAAA,eACfjF,OAAA,CAACI,YAAY;MAACG,YAAY,EAAEA;IAAa;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEvB;;AAEA;AAAAgC,GAAA,GATSD,iBAAiB;AAU1BxG,YAAY,CAAC0G,WAAW,GAAG,cAAc;AACzCf,aAAa,CAACe,WAAW,GAAG,eAAe;AAE3C,eAAeF,iBAAiB;AAAC,IAAAtG,EAAA,EAAA4F,GAAA,EAAAC,GAAA,EAAAQ,GAAA,EAAAE,GAAA;AAAAE,YAAA,CAAAzG,EAAA;AAAAyG,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}