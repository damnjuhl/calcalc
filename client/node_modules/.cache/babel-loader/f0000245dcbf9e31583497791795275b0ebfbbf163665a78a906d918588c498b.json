{"ast":null,"code":"var _jsxFileName = \"c:\\\\coding\\\\calcalc\\\\client\\\\src\\\\components\\\\calendar\\\\CalendarContainer.jsx\",\n  _s = $RefreshSig$();\n// src/components/calendar/CalendarContainer.jsx\nimport React, { useEffect, useState, useCallback, memo } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport axios from 'axios';\nimport { CalendarProvider, useCalendar } from '../../contexts/CalendarContext';\n\n// Setup the localizer for react-big-calendar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\n\n// The actual Calendar view component, memoized to prevent unnecessary re-renders\nconst CalendarView = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  onSelectSlot\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [syncStatus, setSyncStatus] = useState({\n    lastSync: null,\n    isConnected: false,\n    inProgress: false\n  });\n\n  // Get calendar context\n  const {\n    dateRange,\n    updateDateRange,\n    changeView\n  } = useCalendar();\n\n  // Fetch events from API - wrapped in useCallback to prevent recreation on each render\n  const fetchEvents = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Use the date range in the API call if available\n      let response;\n      if (dateRange && dateRange.start && dateRange.end) {\n        const formattedStart = moment(dateRange.start).format('YYYY-MM-DD');\n        const formattedEnd = moment(dateRange.end).format('YYYY-MM-DD');\n        response = await axios.get(`/api/events/range/${formattedStart}/${formattedEnd}`);\n      } else {\n        response = await axios.get('/api/events');\n      }\n\n      // Transform the events for the calendar\n      const formattedEvents = response.data.map(event => ({\n        id: event.event_id || event.id,\n        title: event.summary || event.title || 'Untitled Event',\n        start: new Date(event.start_time || event.start),\n        end: new Date(event.end_time || event.end),\n        allDay: event.all_day || event.allDay || false,\n        income: event.income || 0,\n        expenses: event.expenses || 0,\n        venue: event.location || event.venue || '',\n        description: event.description || ''\n      }));\n      setEvents(formattedEvents);\n    } catch (err) {\n      console.error('Error fetching events:', err);\n      setError('Failed to load events. Please try again later.');\n\n      // Use mock data as fallback\n      const mockEvents = [{\n        id: 1,\n        title: 'Wedding at Grand Ballroom',\n        start: new Date(2025, 2, 15),\n        end: new Date(2025, 2, 16),\n        income: 3000,\n        expenses: 800,\n        venue: 'Grand Ballroom'\n      }, {\n        id: 2,\n        title: 'Corporate Event',\n        start: new Date(2025, 2, 20),\n        end: new Date(2025, 2, 20),\n        income: 2500,\n        expenses: 600,\n        venue: 'City Conference Center'\n      }];\n      setEvents(mockEvents);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [dateRange]); // Only depends on dateRange\n\n  // Fetch events only once when component mounts or dateRange changes\n  useEffect(() => {\n    fetchEvents();\n  }, [fetchEvents]);\n\n  // Handle date navigation - wrapped in useCallback\n  const handleNavigate = useCallback(date => {\n    updateDateRange({\n      start: date\n    });\n  }, [updateDateRange]);\n\n  // Handle view change - wrapped in useCallback\n  const handleViewChange = useCallback(view => {\n    changeView(view);\n  }, [changeView]);\n\n  // Handle selecting a slot (date or time range) - wrapped in useCallback\n  const handleSelectSlot = useCallback(slotInfo => {\n    if (onSelectSlot) {\n      onSelectSlot(slotInfo);\n    }\n  }, [onSelectSlot]);\n\n  // Event styling - wrapped in useCallback to prevent recreation\n  const eventStyleGetter = useCallback(event => {\n    let style = {\n      backgroundColor: '#3174ad',\n      borderRadius: '4px',\n      opacity: 0.8,\n      color: 'white',\n      border: '0px',\n      display: 'block'\n    };\n\n    // Different color based on event status\n    if (event.status === 'tentative') {\n      style.backgroundColor = '#f39c12';\n    } else if (event.status === 'cancelled') {\n      style.backgroundColor = '#e74c3c';\n      style.textDecoration = 'line-through';\n    }\n    return {\n      style\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container h-full\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: '100%'\n      },\n      onSelectSlot: handleSelectSlot,\n      onNavigate: handleNavigate,\n      onView: handleViewChange,\n      selectable: true,\n      longPressThreshold: 250,\n      date: dateRange.start,\n      view: dateRange.view || 'month',\n      eventPropGetter: eventStyleGetter,\n      views: ['month', 'week', 'day', 'agenda'],\n      popup: true,\n      components: {\n        toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}, \"GRKiHCX2q9rky+5mQ/dQ7jpRIMk=\", false, function () {\n  return [useCalendar];\n})), \"GRKiHCX2q9rky+5mQ/dQ7jpRIMk=\", false, function () {\n  return [useCalendar];\n});\n\n// Custom toolbar component with sync button\n_c2 = CalendarView;\nconst CustomToolbar = toolbar => {\n  const goToBack = () => {\n    toolbar.onNavigate('PREV');\n  };\n  const goToNext = () => {\n    toolbar.onNavigate('NEXT');\n  };\n  const goToCurrent = () => {\n    toolbar.onNavigate('TODAY');\n  };\n  const label = () => {\n    const date = moment(toolbar.date);\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"rbc-toolbar-label\",\n      children: date.format('MMMM YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rbc-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToCurrent,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: goToNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-toolbar-label\",\n      children: label()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rbc-btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('month'),\n        children: \"Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('week'),\n        children: \"Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('day'),\n        children: \"Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => toolbar.onView('agenda'),\n        children: \"Agenda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n// Main container component that provides context\n_c3 = CustomToolbar;\nfunction CalendarContainer({\n  onSelectSlot\n}) {\n  // Simple wrapper with the calendar context\n  return /*#__PURE__*/_jsxDEV(CalendarProvider, {\n    children: /*#__PURE__*/_jsxDEV(CalendarView, {\n      onSelectSlot: onSelectSlot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_c4 = CalendarContainer;\nexport default CalendarContainer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CalendarView$memo\");\n$RefreshReg$(_c2, \"CalendarView\");\n$RefreshReg$(_c3, \"CustomToolbar\");\n$RefreshReg$(_c4, \"CalendarContainer\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","memo","Calendar","momentLocalizer","moment","axios","CalendarProvider","useCalendar","jsxDEV","_jsxDEV","localizer","CalendarView","_s","_c","onSelectSlot","events","setEvents","isLoading","setIsLoading","error","setError","syncStatus","setSyncStatus","lastSync","isConnected","inProgress","dateRange","updateDateRange","changeView","fetchEvents","response","start","end","formattedStart","format","formattedEnd","get","formattedEvents","data","map","event","id","event_id","title","summary","Date","start_time","end_time","allDay","all_day","income","expenses","venue","location","description","err","console","mockEvents","handleNavigate","date","handleViewChange","view","handleSelectSlot","slotInfo","eventStyleGetter","style","backgroundColor","borderRadius","opacity","color","border","display","status","textDecoration","className","children","startAccessor","endAccessor","height","onNavigate","onView","selectable","longPressThreshold","eventPropGetter","views","popup","components","toolbar","CustomToolbar","fileName","_jsxFileName","lineNumber","columnNumber","_c2","goToBack","goToNext","goToCurrent","label","type","onClick","_c3","CalendarContainer","_c4","$RefreshReg$"],"sources":["c:/coding/calcalc/client/src/components/calendar/CalendarContainer.jsx"],"sourcesContent":["// src/components/calendar/CalendarContainer.jsx\r\nimport React, { useEffect, useState, useCallback, memo } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport axios from 'axios';\r\nimport { CalendarProvider, useCalendar } from '../../contexts/CalendarContext';\r\n\r\n// Setup the localizer for react-big-calendar\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// The actual Calendar view component, memoized to prevent unnecessary re-renders\r\nconst CalendarView = memo(({ onSelectSlot }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [syncStatus, setSyncStatus] = useState({\r\n    lastSync: null,\r\n    isConnected: false,\r\n    inProgress: false\r\n  });\r\n  \r\n  // Get calendar context\r\n  const { dateRange, updateDateRange, changeView } = useCalendar();\r\n\r\n  // Fetch events from API - wrapped in useCallback to prevent recreation on each render\r\n  const fetchEvents = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Use the date range in the API call if available\r\n      let response;\r\n      if (dateRange && dateRange.start && dateRange.end) {\r\n        const formattedStart = moment(dateRange.start).format('YYYY-MM-DD');\r\n        const formattedEnd = moment(dateRange.end).format('YYYY-MM-DD');\r\n        response = await axios.get(`/api/events/range/${formattedStart}/${formattedEnd}`);\r\n      } else {\r\n        response = await axios.get('/api/events');\r\n      }\r\n      \r\n      // Transform the events for the calendar\r\n      const formattedEvents = response.data.map(event => ({\r\n        id: event.event_id || event.id,\r\n        title: event.summary || event.title || 'Untitled Event',\r\n        start: new Date(event.start_time || event.start),\r\n        end: new Date(event.end_time || event.end),\r\n        allDay: event.all_day || event.allDay || false,\r\n        income: event.income || 0,\r\n        expenses: event.expenses || 0,\r\n        venue: event.location || event.venue || '',\r\n        description: event.description || ''\r\n      }));\r\n      \r\n      setEvents(formattedEvents);\r\n    } catch (err) {\r\n      console.error('Error fetching events:', err);\r\n      setError('Failed to load events. Please try again later.');\r\n      \r\n      // Use mock data as fallback\r\n      const mockEvents = [\r\n        {\r\n          id: 1,\r\n          title: 'Wedding at Grand Ballroom',\r\n          start: new Date(2025, 2, 15),\r\n          end: new Date(2025, 2, 16),\r\n          income: 3000,\r\n          expenses: 800,\r\n          venue: 'Grand Ballroom'\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Corporate Event',\r\n          start: new Date(2025, 2, 20),\r\n          end: new Date(2025, 2, 20),\r\n          income: 2500,\r\n          expenses: 600,\r\n          venue: 'City Conference Center'\r\n        }\r\n      ];\r\n      \r\n      setEvents(mockEvents);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [dateRange]); // Only depends on dateRange\r\n\r\n  // Fetch events only once when component mounts or dateRange changes\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, [fetchEvents]);\r\n\r\n  // Handle date navigation - wrapped in useCallback\r\n  const handleNavigate = useCallback((date) => {\r\n    updateDateRange({\r\n      start: date\r\n    });\r\n  }, [updateDateRange]);\r\n\r\n  // Handle view change - wrapped in useCallback\r\n  const handleViewChange = useCallback((view) => {\r\n    changeView(view);\r\n  }, [changeView]);\r\n\r\n  // Handle selecting a slot (date or time range) - wrapped in useCallback\r\n  const handleSelectSlot = useCallback((slotInfo) => {\r\n    if (onSelectSlot) {\r\n      onSelectSlot(slotInfo);\r\n    }\r\n  }, [onSelectSlot]);\r\n\r\n  // Event styling - wrapped in useCallback to prevent recreation\r\n  const eventStyleGetter = useCallback((event) => {\r\n    let style = {\r\n      backgroundColor: '#3174ad',\r\n      borderRadius: '4px',\r\n      opacity: 0.8,\r\n      color: 'white',\r\n      border: '0px',\r\n      display: 'block'\r\n    };\r\n    \r\n    // Different color based on event status\r\n    if (event.status === 'tentative') {\r\n      style.backgroundColor = '#f39c12';\r\n    } else if (event.status === 'cancelled') {\r\n      style.backgroundColor = '#e74c3c';\r\n      style.textDecoration = 'line-through';\r\n    }\r\n    \r\n    return { style };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calendar-container h-full\">\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: '100%' }}\r\n        onSelectSlot={handleSelectSlot}\r\n        onNavigate={handleNavigate}\r\n        onView={handleViewChange}\r\n        selectable={true}\r\n        longPressThreshold={250}\r\n        date={dateRange.start}\r\n        view={dateRange.view || 'month'}\r\n        eventPropGetter={eventStyleGetter}\r\n        views={['month', 'week', 'day', 'agenda']}\r\n        popup\r\n        components={{\r\n          toolbar: CustomToolbar\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\n// Custom toolbar component with sync button\r\nconst CustomToolbar = (toolbar) => {\r\n  const goToBack = () => {\r\n    toolbar.onNavigate('PREV');\r\n  };\r\n\r\n  const goToNext = () => {\r\n    toolbar.onNavigate('NEXT');\r\n  };\r\n\r\n  const goToCurrent = () => {\r\n    toolbar.onNavigate('TODAY');\r\n  };\r\n\r\n  const label = () => {\r\n    const date = moment(toolbar.date);\r\n    return (\r\n      <span className=\"rbc-toolbar-label\">{date.format('MMMM YYYY')}</span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"rbc-toolbar\">\r\n      <div className=\"rbc-btn-group\">\r\n        <button type=\"button\" onClick={goToCurrent}>Today</button>\r\n        <button type=\"button\" onClick={goToBack}>Back</button>\r\n        <button type=\"button\" onClick={goToNext}>Next</button>\r\n      </div>\r\n      <div className=\"rbc-toolbar-label\">{label()}</div>\r\n      <div className=\"rbc-btn-group\">\r\n        <button type=\"button\" onClick={() => toolbar.onView('month')}>Month</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('week')}>Week</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('day')}>Day</button>\r\n        <button type=\"button\" onClick={() => toolbar.onView('agenda')}>Agenda</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main container component that provides context\r\nfunction CalendarContainer({ onSelectSlot }) {\r\n  // Simple wrapper with the calendar context\r\n  return (\r\n    <CalendarProvider>\r\n      <CalendarView onSelectSlot={onSelectSlot} />\r\n    </CalendarProvider>\r\n  );\r\n}\r\n\r\nexport default CalendarContainer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}